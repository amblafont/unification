#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{tikz-cd}
\usepackage{quiver}
\newcommand{\Ker}{\mathrm{Ker}}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
theorems-ams-extended
\end_modules
\maintain_unincluded_children false
\begin_local_layout
#\DeclareLyXModule{Other}
#DescriptionBegin
#Defines Property
#DescriptionEnd
#Requires: theorems-ams-extended
#Category: theorems

Format 66

Requires    amsmath

# The environments defined (regular and starred) are :
# - Property

Style Property
    CopyStyle             Theorem
    DependsOn               Theorem
    LatexName             property
    LabelString           "Property \thethm."
    Preamble
      \newtheorem{property}{\protect\propertyname}
    EndPreamble
    LangPreamble
      \providecommand{\propertyname}{_(Property)}
    EndLangPreamble
    BabelPreamble
      \addto\captions$$lang{\renewcommand{\propertyname}{_(Property)}}
    EndBabelPreamble
End
\end_local_layout
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
General Pattern unification
\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\Kl}[1]{Kl_{#1}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\Eil}[1]{#1\text{-alg}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\directed}[3]{#1\supset_{#3}#2}
\end_inset

 
\begin_inset FormulaMacro
\newcommand{\C}{\mathcal{C}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\colim}{\mathrm{colim}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\Nom}{\mathrm{Nom}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\op}[1]{#1^{op}}
\end_inset


\end_layout

\begin_layout Standard
We give a general correctness proof for pattern unification in a categorical
 setting.
 Other envisionned applications of our abstract categorical proof are unificatio
n for linear or polymorphic syntax (Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:applications"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 In Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:cat-settings"
plural "false"
caps "false"
noprefix "false"

\end_inset

, we propose a general categorical setting in which pattern unification
 applies, with the nominal sets in mind.
 In this case, a second-order syntax with metavariables applied to distinct
 variables (according to the pattern restriction) corresponds to a free
 monad applied a coproduct of representable presheaves.
\end_layout

\begin_layout Standard
In Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Main-result"
plural "false"
caps "false"
noprefix "false"

\end_inset

, we state our main result that justifies pattern unification algorithms.
 Then we tackle the proof algorithm, starting with the pruning phase (Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:pruning-phase"
plural "false"
caps "false"
noprefix "false"

\end_inset

), the coequalising phase (Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:coequalising-phase"
plural "false"
caps "false"
noprefix "false"

\end_inset

), the occur-check phase (Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:occur-check"
plural "false"
caps "false"
noprefix "false"

\end_inset

), and finally we justify termination (Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Termination"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
Some benefits: we unify the operation and the vairable case.
\end_layout

\begin_layout Notation
Given a natural number 
\begin_inset Formula $n$
\end_inset

 we denote by 
\begin_inset Formula $\text{\ensuremath{\underline{n}}}$
\end_inset

 the set 
\begin_inset Formula $\{0,\dots,n-1\}$
\end_inset

.
\end_layout

\begin_layout Section
General setting
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:cat-settings"

\end_inset


\end_layout

\begin_layout Subsection
Base category
\end_layout

\begin_layout Standard
We work in a full subcategory 
\begin_inset Formula $\mathcal{C}$
\end_inset

 of functors 
\begin_inset Formula $\mathcal{A}\rightarrow Set$
\end_inset

, namely, those preserving finite connected limits, where 
\begin_inset Formula $\mathcal{A}$
\end_inset

 is a small category in which all morphisms are regular monomorphisms and
 has finite connected limits.
\end_layout

\begin_layout Example
For the category of nominal sets, take 
\begin_inset Formula $\mathcal{A}=\mathbb{F}_{m}$
\end_inset

 the category of finite cardinals and injections.
\end_layout

\begin_layout Remark
\begin_inset CommandInset label
LatexCommand label
name "rem:regular-mono"

\end_inset

Regularity of monomorphisms (i.e., the fact that monomorphisms are equalisers)
 implies their effectivity (i.e., they are the equalisers of their cokernel
 pairs) because the category has pullbacks.
 In fact, this condition is not strictly needed, but it will allow us (by
 Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:effective-epi"
plural "false"
caps "false"
noprefix "false"

\end_inset

 below) to convert a factorisation problem (does 
\begin_inset Formula $g:A\rightarrow X$
\end_inset

 factors through 
\begin_inset Formula $e:A\twoheadrightarrow B$
\end_inset

?) into an equality check (does 
\begin_inset Formula $e$
\end_inset

 coequalises the kernel pair of 
\begin_inset Formula $g$
\end_inset

?), during the pruning phase (see Equation
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pruning-facto-wo-regular"
plural "false"
caps "false"
noprefix "false"

\end_inset

) making our description more effective.
 This happens, for instance, when checking that a variable occurs or not
 in some metavariable application.
\end_layout

\begin_layout Standard
The yoneda embedding 
\begin_inset Formula $\mathcal{A}^{o}\rightarrow[\mathcal{A},Set]$
\end_inset

 factors through 
\begin_inset Formula $\mathcal{C}\rightarrow[\mathcal{A},Set]$
\end_inset

.
 We denote the fully faithful embedding as 
\begin_inset Formula $D\xrightarrow{K}\mathcal{C}$
\end_inset

.
 A useful lemma that we will exploit is the following:
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:lims-coprod-pw"

\end_inset

Limits, coproducts, and filtered colimits in 
\begin_inset Formula $\mathcal{C}$
\end_inset

 are computed pointwise.
\end_layout

\begin_layout Proof
All we have to check is that limits, coproducts, and filtered colimits of
 functors preserving finite connected limits still preserve finite connected
 limits.
 The case of limits is clear, since limits commute with limits.
 The case of coproducts follows from connected limits commuting with coproducts
 in 
\begin_inset Formula $Set$
\end_inset

.
 The case of filtered colimits follows from finite limits commuting with
 filtered colimits in 
\begin_inset Formula $Set$
\end_inset

.
\end_layout

\begin_layout Standard
In this rest of this section, we abstract this situation by listing a number
 of properties that we will use in the following to describe the unification
 algorithm.
 We will never unfold the definition of 
\begin_inset Formula $\mathcal{C}$
\end_inset

 afterwards.
\end_layout

\begin_layout Property
\begin_inset Formula $K:D\rightarrow\C$
\end_inset

 is fully faithful.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Property
\begin_inset CommandInset label
LatexCommand label
name "assu:presentable"

\end_inset


\begin_inset Formula $\C$
\end_inset

 is bicomplete
\begin_inset Note Note
status open

\begin_layout Plain Layout
locally presentable
\end_layout

\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset Formula $\mathcal{C}$
\end_inset

 is the category of models of a limit sketch, and thus is locally presentable,
 by
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after "Proposition 1.51"
key "Adamek"
literal "false"

\end_inset

.
 As a result, it is bicomplete 
\begin_inset CommandInset citation
LatexCommand cite
after "Remark 1.56"
key "Adamek"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Presentability ensures (in particular) that 
\begin_inset Formula $\C$
\end_inset

 is bicomplete.
 
\end_layout

\end_inset


\end_layout

\begin_layout Remark
We need cocompleteness so that we can compute free monads of a finitary
 endofunctor as the colimit of an initial chain.
 Completeness ensures that this free monad is algebraically free (not sure
 if it is helpful).
\end_layout

\begin_layout Definition
We denote by 
\begin_inset Formula $D^{+}\xrightarrow{K^{+}}\C$
\end_inset

 the full subcategory of 
\begin_inset Formula $\C$
\end_inset

 consisting of finite coproducts of objects of 
\begin_inset Formula $D$
\end_inset

.
\end_layout

\begin_layout Definition
We will be interested in coequalisers in 
\begin_inset Formula $D^{+}$
\end_inset

.
\end_layout

\begin_layout Property
\begin_inset CommandInset label
LatexCommand label
name "assu:finite-connected"

\end_inset


\begin_inset Formula $D$
\end_inset

 is closed under finite connected colimits.
\end_layout

\begin_layout Standard
This is to deal with the case 
\begin_inset Formula $M(\vec{x})=N(\vec{y})$
\end_inset

.
\begin_inset Note Note
status open

\begin_layout Remark
I think that the algorithm still works without this assumption: it is just
 that at some point we need to compute a colimit of elements of 
\begin_inset Formula $D$
\end_inset

, in particular in Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:case-metavars"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 We already know that such a colimit exists in 
\begin_inset Formula $\C$
\end_inset

, but in concrete examples, but we need to compute them in 
\begin_inset Formula $D$
\end_inset

 so that we can chain the coequalisers when unifying multiple terms.
 
\end_layout

\end_inset


\end_layout

\begin_layout Proof
Because 
\begin_inset Formula $K$
\end_inset

 is fully faithful, an equivalent statement is that 
\begin_inset Formula $D$
\end_inset

 is closed under finite connected colimits and 
\begin_inset Formula $K$
\end_inset

 preserves them.
 Now, we assumed that 
\begin_inset Formula $\mathcal{A}$
\end_inset

 has finite connected limits.
 Let us show that the yoneda embedding preserves them.
 We have a natural isomorphism 
\begin_inset Formula $[\mathcal{A},Set](ya,JX)\simeq\mathcal{C}(Ka,X)$
\end_inset

, where 
\begin_inset Formula $y$
\end_inset

 is the yoneda embedding in 
\begin_inset Formula $\mathcal{A}^{o}\rightarrow[\mathcal{A},Set]$
\end_inset

, and 
\begin_inset Formula $J:\mathcal{C}\rightarrow[\mathcal{A},Set]$
\end_inset

 the canonical embedding.
 Now consider a finite connected limit 
\begin_inset Formula $\lim F$
\end_inset

 in 
\begin_inset Formula $\mathcal{A}$
\end_inset

.
 Then, 
\begin_inset Formula 
\begin{align*}
\mathcal{C}(K\lim F,X) & \cong[\mathcal{A},Set](y\lim F,JX)\\
 & \cong JX(\lim F)\tag{By the Yoneda Lemma.}\\
 & \cong\lim(JX\circ F)\tag{By definition of \ensuremath{\mathcal{C}}}\\
 & \cong\lim([\mathcal{A},Set](yF-,JX)]\tag{By the Yoneda Lemma}\\
 & \cong\lim\mathcal{C}(KF-,X)\\
 & \cong\mathcal{C}(\colim KF,X)\tag{By left continuity of the hom-set bifunctor}
\end{align*}

\end_inset

Thus, 
\begin_inset Formula $K\lim F\cong\colim KF$
\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset Note Note
status open

\begin_layout Plain Layout
That is, 
\begin_inset Formula $K$
\end_inset

 is 
\begin_inset Formula $y$
\end_inset

-left adjoint to 
\begin_inset Formula $J$
\end_inset

, so that 
\begin_inset Formula $K=Lift_{J}y$
\end_inset

 and for any functor 
\begin_inset Formula $F$
\end_inset

, 
\begin_inset Formula $Lift_{J}y\circ F=Lift_{J}(y\circ F)$
\end_inset

.
 Now, given a functor 
\begin_inset Formula $d:B\rightarrow\mathcal{A}^{o}$
\end_inset

, we have 
\begin_inset Formula $K\circ Lan_{!}d=Lift_{J}y\circ Lan_{!}d=Lift_{J}(y\circ Lan_{!}d)=Lift_{J}(Lan_{!}(y\circ d))=Lan_{!}(Lift_{J}(y\circ d))=\dots=Lan_{!}(Lift_{J}y\circ d)=Lan_{!}(K\circ d)$
\end_inset

 the crucial point here is that 
\begin_inset Formula $y\circ Lan_{!}d=Lan_{!}(y\circ d)$
\end_inset

, which is not obvious.
\end_layout

\end_inset


\end_layout

\begin_layout Property
\begin_inset CommandInset label
LatexCommand label
name "assu:epis"

\end_inset

Given any morphism 
\begin_inset Formula $f:A\rightarrow B$
\end_inset

 in 
\begin_inset Formula $D$
\end_inset

, 
\begin_inset Formula $Kf$
\end_inset

 is epimorphic.
\end_layout

\begin_layout Proof
A morphism 
\begin_inset Formula $f:A\rightarrow B$
\end_inset

 is epimorphic if and only if the following square is a pushout
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
YADE DIAGRAM {"graph":{"edges":[{"from":0,"id":4,"label":{"label":"f","style":{"
alignment":"left","bend":0,"dashed":false,"double":false,"head":"default","posit
ion":0.5,"tail":"none"}},"to":1},{"from":1,"id":5,"label":{"label":"","style":{"a
lignment":"left","bend":0,"dashed":false,"double":true,"head":"none","position":
0.5,"tail":"none"}},"to":2},{"from":0,"id":6,"label":{"label":"f","style":{"align
ment":"right","bend":0,"dashed":false,"double":false,"head":"default","position"
:0.5,"tail":"none"}},"to":3},{"from":3,"id":7,"label":{"label":"","style":{"align
ment":"left","bend":0,"dashed":false,"double":true,"head":"none","position":0.5,"
tail":"none"}},"to":2}],"latexPreamble":"","nodes":[{"id":0,"label":{"isMath":tr
ue,"label":"A","pos":[300,100]}},{"id":1,"label":{"isMath":true,"label":"B","pos
":[500,100]}},{"id":2,"label":{"isMath":true,"label":"B","pos":[500,300]}},{"id"
:3,"label":{"isMath":true,"label":"A","pos":[300,300]}}],"sizeGrid":200},"versio
n":5}
\end_layout

\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% https://q.uiver.app/?q=WzAsNCxbMCwwLCJBIl0sWzEsMCwiQiJdLFsxLDEsIkIiXSxbMCwxLCJBI
l0sWzAsMSwiZiJdLFsxLDIsIiIsMCx7ImxldmVsIjoyLCJzdHlsZSI6eyJoZWFkIjp7Im5hbWUiOiJub
25lIn19fV0sWzAsMywiZiIsMl0sWzMsMiwiIiwwLHsibGV2ZWwiOjIsInN0eWxlIjp7ImhlYWQiOnsib
mFtZSI6Im5vbmUifX19XV0= 
\end_layout

\begin_layout Plain Layout


\backslash
[
\backslash
begin{tikzcd} 	A & B 
\backslash

\backslash
 	B & B 	
\backslash
arrow["f", from=1-1, to=1-2] 	
\backslash
arrow[Rightarrow, no head, from=1-2, to=2-2] 	
\backslash
arrow["f"', from=1-1, to=2-1] 	
\backslash
arrow[Rightarrow, no head, from=2-1, to=2-2] 
\backslash
end{tikzcd}
\backslash
]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We conclude by Propery
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:finite-connected"
plural "false"
caps "false"
noprefix "false"

\end_inset

, because all morphisms in 
\begin_inset Formula $D={\cal A}^{o}$
\end_inset

 are epimorphic by assumption.
\end_layout

\end_deeper
\begin_layout Standard
In fact, we have the following stronger property, that we state separately
 because as argued in Remark
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "rem:regular-mono"
plural "false"
caps "false"
noprefix "false"

\end_inset

, this is not strictly required.
\end_layout

\begin_layout Property
\begin_inset CommandInset label
LatexCommand label
name "assu:effective-epi"

\end_inset

Given any morphism 
\begin_inset Formula $f:A\rightarrow B$
\end_inset

 in 
\begin_inset Formula $D$
\end_inset

, the epimorphism 
\begin_inset Formula $Kf$
\end_inset

 is effective, i.e, the following diagram is a coequaliser
\end_layout

\begin_layout Property
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
YADE DIAGRAM {"graph":{"edges":[{"from":0,"id":3,"label":{"label":"p_1","style":
{"alignment":"left","bend":-0.2,"dashed":false,"double":false,"head":"default","p
osition":0.5,"tail":"none"}},"to":1},{"from":0,"id":4,"label":{"label":"p_2","sty
le":{"alignment":"right","bend":0.2,"dashed":false,"double":false,"head":"default
","position":0.5,"tail":"none"}},"to":1},{"from":1,"id":5,"label":{"label":"f","s
tyle":{"alignment":"left","bend":0,"dashed":false,"double":false,"head":"default
","position":0.5,"tail":"none"}},"to":2}],"latexPreamble":"","nodes":[{"id":0,"la
bel":{"isMath":true,"label":"A
\end_layout

\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% https://q.uiver.app/?q=WzAsMyxbMCwwLCJBXFx0aW1lc19CIEEiXSxbMSwwLCJBIl0sWzIsMCwiQ
iJdLFswLDEsInBfMSIsMCx7ImN1cnZlIjotMn1dLFswLDEsInBfMiIsMix7ImN1cnZlIjoyfV0sWzEsM
iwiZiJdXQ== 
\end_layout

\begin_layout Plain Layout


\backslash
[
\backslash
begin{tikzcd}  {
\backslash
Ker(f)} & A & B  
\backslash
arrow["{p_1}", curve={height=-12pt}, from=1-1, to=1-2]  
\backslash
arrow["{p_2}"', curve={height=12pt}, from=1-1, to=1-2]  
\backslash
arrow["f", from=1-2, to=1-3] 
\backslash
end{tikzcd}
\backslash
]
\end_layout

\end_inset


\end_layout

\end_inset

where 
\begin_inset Formula $\Ker(f)\rightrightarrows A$
\end_inset

 is the kernel pair of 
\begin_inset Formula $f$
\end_inset

 defined as the pullback of 
\begin_inset Formula $f$
\end_inset

 with itself, as in
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
[
\backslash
begin{tikzcd} 	
\backslash
Ker(f) & A 
\backslash

\backslash
 	A & B 	
\backslash
arrow["f", from=1-2, to=2-2] 	
\backslash
arrow[
\begin_inset Quotes eld
\end_inset

p_1
\begin_inset Quotes erd
\end_inset

, from=1-1, to=1-2] 	
\backslash
arrow["f"', from=2-1, to=2-2] 	
\backslash
arrow[
\begin_inset Quotes eld
\end_inset

p_2
\begin_inset Quotes erd
\end_inset

', from=1-1, to=2-1] 
\backslash
end{tikzcd}
\backslash
]
\end_layout

\end_inset


\end_layout

\end_inset

of its kernel pair
\end_layout

\begin_layout Proof
Since 
\begin_inset Formula $\C$
\end_inset

 has pullbacks (Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:presentable"
plural "false"
caps "false"
noprefix "false"

\end_inset

), it is enough to show that 
\begin_inset Formula $Kf$
\end_inset

 is regular.
 But since 
\begin_inset Formula $f$
\end_inset

 is a regular epimorphism by assumption, we know that the 
\begin_inset Formula $f$
\end_inset

 is the coequaliser of some 
\begin_inset Formula $u_{1},u_{2}:C\rightarrow A$
\end_inset

 in 
\begin_inset Formula $D$
\end_inset

.
 We conclude by Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:finite-connected"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Property
\begin_inset CommandInset label
LatexCommand label
name "assu:inj-are-mono"

\end_inset

Coproduct injections 
\begin_inset Formula $A_{i}\rightarrow\coprod_{j}A_{j}$
\end_inset

 in 
\begin_inset Formula $\C$
\end_inset

 are monomorphisms.
\end_layout

\begin_layout Proof
This follows from Lemma
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lem:lims-coprod-pw"
plural "false"
caps "false"
noprefix "false"

\end_inset

, because a morphism 
\begin_inset Formula $f:A\rightarrow B$
\end_inset

 is monomorphic if and only if the following square is a pullback
\end_layout

\begin_layout Proof
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
[
\backslash
begin{tikzcd} 	A & A 
\backslash

\backslash
 	A & B 	
\backslash
arrow["f", from=1-2, to=2-2] 	
\backslash
arrow[equal, from=1-1, to=1-2] 	
\backslash
arrow["f"', from=2-1, to=2-2] 	
\backslash
arrow[Rightarrow, no head, from=1-1, to=2-1] 
\backslash
end{tikzcd}
\backslash
]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following two properties are direct consequences of Lemma
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lem:lims-coprod-pw"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Property
\begin_inset CommandInset label
LatexCommand label
name "assu:connected"

\end_inset

For each 
\begin_inset Formula $d\in D$
\end_inset

, the object 
\begin_inset Formula $Kd$
\end_inset

 is connected, i.e., any morphism 
\begin_inset Formula $Kd\rightarrow\coprod_{i}A_{i}$
\end_inset

 factors through exactly one coproduct injection 
\begin_inset Formula $A_{j}\rightarrow\coprod_{i}A_{i}$
\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Formula $\C(Kd,-)$
\end_inset

 preserves coproducts
\end_layout

\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
(i.e., 
\begin_inset Formula $d$
\end_inset

 is connected) and filtered colimits (TODO: do we really need the latter?).
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
coproducts of filtered cat?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
This is useful to know to factor 
\begin_inset Formula $Kd\rightarrow A+B$
\end_inset

 as 
\begin_inset Formula $Kd\rightarrow A$
\end_inset

 or 
\begin_inset Formula $Kd\rightarrow B$
\end_inset

, or to show inexistence of a unifier
\end_layout

\end_inset


\end_layout

\begin_layout Property
\begin_inset CommandInset label
LatexCommand label
name "assu:compact"

\end_inset

For each 
\begin_inset Formula $d\in D$
\end_inset

, the object 
\begin_inset Formula $Kd$
\end_inset

 is finitely presentable, i.e., 
\begin_inset Formula $\C(Kd,-)$
\end_inset

 preserves filtered colimits.
\end_layout

\begin_layout Standard
This is used to prove correctness of the occur-check by induction.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Formula $\C$
\end_inset

 is extensive
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after "Proposition 2.14"
key "ExtensiveCats"
literal "false"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Itemize
sums are disjoints, i.e., coproduct injections 
\begin_inset Formula $A\hookrightarrow A+B\hookleftarrow B$
\end_inset

 are monomorphic, and their pullback is the initial object 
\begin_inset Formula $0$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
YADE DIAGRAM {"graph":{"edges":[{"from":0,"id":4,"label":{"label":"","style":{"a
lignment":"left","bend":0,"dashed":false,"double":false,"head":"default","positi
on":0.5,"tail":"none"}},"to":1},{"from":1,"id":5,"label":{"label":"","style":{"al
ignment":"left","bend":0,"dashed":false,"double":false,"head":"default","positio
n":0.5,"tail":"hook"}},"to":2},{"from":0,"id":6,"label":{"label":"","style":{"ali
gnment":"left","bend":0,"dashed":false,"double":false,"head":"default","position
":0.5,"tail":"none"}},"to":3},{"from":3,"id":7,"label":{"label":"","style":{"alig
nment":"left","bend":0,"dashed":false,"double":false,"head":"default","position"
:0.5,"tail":"hook"}},"to":2}],"latexPreamble":"","nodes":[{"id":0,"label":{"isMat
h":true,"label":"0","pos":[300,100]}},{"id":1,"label":{"isMath":true,"label":"A"
,"pos":[500,100]}},{"id":2,"label":{"isMath":true,"label":"A+B","pos":[500,300]}
},{"id":3,"label":{"isMath":true,"label":"B","pos":[300,300]}}],"sizeGrid":200},
"version":5}
\end_layout

\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% https://q.uiver.app/?q=WzAsNCxbMCwwLCIwIl0sWzEsMCwiQSJdLFsxLDEsIkErQiJdLFswLDEsI
kIiXSxbMCwxXSxbMSwyLCIiLDAseyJzdHlsZSI6eyJ0YWlsIjp7Im5hbWUiOiJob29rIiwic2lkZSI6I
nRvcCJ9fX1dLFswLDNdLFszLDIsIiIsMCx7InN0eWxlIjp7InRhaWwiOnsibmFtZSI6Imhvb2siLCJza
WRlIjoidG9wIn19fV1d 
\end_layout

\begin_layout Plain Layout


\backslash
[
\backslash
begin{tikzcd} 	0 & A 
\backslash

\backslash
 	B & {A+B} 	
\backslash
arrow[from=1-1, to=1-2] 	
\backslash
arrow[hook, from=1-2, to=2-2] 	
\backslash
arrow[from=1-1, to=2-1] 	
\backslash
arrow[hook, from=2-1, to=2-2] 
\backslash
end{tikzcd}
\backslash
]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
sums are universal: for any morphism 
\begin_inset Formula $P\rightarrow A+B$
\end_inset

, the object 
\begin_inset Formula $P$
\end_inset

 is the coproduct of 
\begin_inset Formula $A'$
\end_inset

 and 
\begin_inset Formula $B'$
\end_inset

, defined as pullbacks of 
\begin_inset Formula $P$
\end_inset

 along the coproduct injections:
\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
YADE DIAGRAM {"graph":{"edges":[{"from":0,"id":6,"label":{"label":"","style":{"a
lignment":"left","bend":0,"dashed":false,"double":false,"head":"default","positi
on":0.5,"tail":"none"}},"to":1},{"from":2,"id":7,"label":{"label":"","style":{"al
ignment":"left","bend":0,"dashed":false,"double":false,"head":"default","positio
n":0.5,"tail":"none"}},"to":1},{"from":3,"id":8,"label":{"label":"","style":{"ali
gnment":"left","bend":0,"dashed":false,"double":false,"head":"default","position
":0.5,"tail":"none"}},"to":1},{"from":4,"id":9,"label":{"label":"","style":{"alig
nment":"left","bend":0,"dashed":false,"double":false,"head":"default","position"
:0.5,"tail":"none"}},"to":2},{"from":4,"id":10,"label":{"label":"","style":{"alig
nment":"left","bend":0,"dashed":false,"double":false,"head":"default","position"
:0.5,"tail":"none"}},"to":3},{"from":5,"id":11,"label":{"label":"","style":{"alig
nment":"left","bend":0,"dashed":false,"double":false,"head":"default","position"
:0.5,"tail":"none"}},"to":0},{"from":5,"id":12,"label":{"label":"","style":{"alig
nment":"left","bend":0,"dashed":false,"double":false,"head":"default","position"
:0.5,"tail":"none"}},"to":3}],"latexPreamble":"","nodes":[{"id":0,"label":{"isMat
h":true,"label":"A","pos":[500,100]}},{"id":1,"label":{"isMath":true,"label":"A+
B","pos":[700,100]}},{"id":2,"label":{"isMath":true,"label":"B","pos":[900,100]}
},{"id":3,"label":{"isMath":true,"label":"P","pos":[700,300]}},{"id":4,"label":{
"isMath":true,"label":"B'","pos":[900,300]}},{"id":5,"label":{"isMath":true,"lab
el":"A'","pos":[500,300]}}],"sizeGrid":200},"version":5}
\end_layout

\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% https://q.uiver.app/?q=WzAsNixbMCwwLCJBIl0sWzEsMCwiQStCIl0sWzIsMCwiQiJdLFsxLDEsI
lAiXSxbMiwxLCJCJyJdLFswLDEsIkEnIl0sWzAsMV0sWzIsMV0sWzMsMV0sWzQsMl0sWzQsM10sWzUsM
F0sWzUsM11d
\end_layout

\begin_layout Plain Layout


\backslash
[
\backslash
begin{tikzcd} 	A & {A+B} & B 
\backslash

\backslash
 	{A'} & P & {B'} 	
\backslash
arrow[from=1-1, to=1-2] 	
\backslash
arrow[from=1-3, to=1-2] 	
\backslash
arrow[from=2-2, to=1-2] 	
\backslash
arrow[from=2-3, to=1-3] 	
\backslash
arrow[from=2-3, to=2-2] 	
\backslash
arrow[from=2-1, to=1-1] 	
\backslash
arrow[from=2-1, to=2-2] 
\backslash
end{tikzcd}
\backslash
]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Using 
\begin_inset CommandInset citation
LatexCommand cite
after "Proposition 2.14"
key "ExtensiveCats"
literal "false"

\end_inset

, this is a direct consequence of Lemma
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lem:lims-coprod-pw"
plural "false"
caps "false"
noprefix "false"

\end_inset

, since the category of sets is itself extensive.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
We will use the following corollaries.
\end_layout

\begin_layout Corollary
The pullback of 
\begin_inset Formula $A+B\rightarrow C\leftarrow D$
\end_inset

 is computed as the coproduct of 
\begin_inset Formula $A\times_{C}D$
\end_inset

 and 
\begin_inset Formula $B\times_{C}D$
\end_inset

.
\end_layout

\begin_layout Proof
By 
\begin_inset CommandInset citation
LatexCommand cite
after "Corollary 4.9"
key "ExtensiveCats"
literal "false"

\end_inset

, since 
\begin_inset Formula $\C$
\end_inset

 is complete (Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:presentable"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Corollary
There is no commutative square of the shape
\begin_inset Formula 
\[
\xymatrix{Kd\ar[r]\ar[d] & A\ar[d]\\
B\ar[r] & A+B
}
\]

\end_inset


\end_layout

\begin_layout Plain Layout
This is useful to show inexistence of unifier.
\end_layout

\begin_layout Proof
By Corollary
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "cor:connected-no-commuting"
plural "false"
caps "false"
noprefix "false"

\end_inset

, since 
\begin_inset Formula $Kd$
\end_inset

 is connected (Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:connected"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
The endofunctor for syntax
\end_layout

\begin_layout Assumption
We assume given a finitary endofunctor 
\begin_inset Formula $F$
\end_inset

 on 
\begin_inset Formula $\C$
\end_inset

.
 We denote by 
\begin_inset Formula $T$
\end_inset

 the generated free monad 
\begin_inset Formula $F^{*}$
\end_inset

.
\end_layout

\begin_layout Example
\begin_inset CommandInset label
LatexCommand label
name "ex:lambda-endo"

\end_inset

Consider the endofunctor on 
\begin_inset Formula $Nom$
\end_inset

 corresponding to 
\begin_inset Formula $\lambda$
\end_inset

-calculus: 
\begin_inset Formula $F(X)=I+X\times X+X^{I}$
\end_inset

, where 
\begin_inset Formula $I$
\end_inset

 is the representable presheaf 
\begin_inset Formula $y1$
\end_inset

.
 Note that 
\begin_inset Formula $X_{n}^{I}=X_{n+1}$
\end_inset

.
\end_layout

\begin_layout Remark
In applications, we typically provide a finitary endofunctor on 
\begin_inset Formula $[\mathcal{A},Set]$
\end_inset

 that restricts to the category of endofunctors preserving finite connected
 limits.
 By
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lem:lims-coprod-pw"
plural "false"
caps "false"
noprefix "false"

\end_inset

, this restriction is then also finitary.
\end_layout

\begin_layout Remark
Conversely, using the assumptions below, we can also 
\begin_inset Quotes eld
\end_inset

reconstruct
\begin_inset Quotes erd
\end_inset

 the endofunctor on 
\begin_inset Formula $[\mathcal{A},Set]=\hat{D}$
\end_inset

 (see Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:occur-check"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Assumption
\begin_inset CommandInset label
LatexCommand label
name "assu:F-shape"

\end_inset


\begin_inset Formula $F(X)$
\end_inset

 is of the shape 
\begin_inset Formula $\coprod_{i}R_{i}(X)\times S_{i}$
\end_inset

, where
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Formula $I$
\end_inset

 is an object of 
\begin_inset Formula $\C$
\end_inset

;
\end_layout

\end_inset


\begin_inset Formula $R_{i}$
\end_inset

 is right adjoint to some 
\begin_inset Formula $L_{i}$
\end_inset

; 
\end_layout

\begin_layout Itemize
\begin_inset Formula $S_{i}$
\end_inset

 is an object of 
\begin_inset Formula $\C$
\end_inset

.
\begin_inset Note Note
status open

\begin_layout Plain Layout
orthogonal to the class of all morphisms (i.e., given any span 
\begin_inset Formula $S_{i}\leftarrow A\rightarrow B$
\end_inset

, there exists a unique 
\begin_inset Formula $B\rightarrow S_{i}$
\end_inset

 completing the triangle) 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ou alors on demande que 
\begin_inset Formula $S_{i}$
\end_inset

 est stable par pushout
\end_layout

\end_inset

.
 Intuitively, 
\begin_inset Formula $S_{i}$
\end_inset

 is the output type 
\begin_inset Quotes eld
\end_inset

dirac
\begin_inset Quotes erd
\end_inset

 (not used for untyped)
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ou alors on demande que tout diagramme 
\begin_inset Formula $B\leftarrow A\rightarrow S_{i}$
\end_inset

 se complete en un carre avec 
\begin_inset Formula $S_{i}$
\end_inset

 dans le dernier coin.
 Ce qui signifie que 
\begin_inset Formula $\hom(-,S_{i})$
\end_inset

 a une action covariante.
 Ou encore que 
\begin_inset Formula $S_{i}\rightarrow1$
\end_inset

 est right ortogonal a tout, ou encore que 
\begin_inset Formula $S_{i}$
\end_inset

 est orthogonal a tous les morphismes (d'apres la def de Adamek), et ptet
 qu'alors on n'a pas besoin de la sous-terminalite.
 
\end_layout

\end_inset


\color red

\begin_inset Note Note
status open

\begin_layout Plain Layout

\color red
(do we really need a full adjoint or some relative adjoint when the domain
 is from 
\begin_inset Formula $D$
\end_inset

? does this adjoint exists in the linear setting?)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $L_{i}K=\coprod_{j\in J}KL'_{i,j}$
\end_inset

 for some finite family of endofunctors 
\begin_inset Formula $(L'_{i,j})_{j}$
\end_inset

 on 
\begin_inset Formula $D$
\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
a finite colimit is too general, we really need coproducts in the pruning
 phase, see Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:case-KA-RiTC"
plural "false"
caps "false"
noprefix "false"

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:lambek-lemma"

\end_inset


\begin_inset Formula $T(X)$
\end_inset

 is isomorphic to 
\begin_inset Formula $\coprod_{i}R_{i}T(X)\times S_{i}+X$
\end_inset

.
\end_layout

\begin_layout Proof
By Lambek's lemma
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Lambeklemma"
literal "false"

\end_inset

, applied to the endofunctor 
\begin_inset Formula $G-+X$
\end_inset

.
\end_layout

\begin_layout Remark
Typically, we want the endofunctor on syntax mapping 
\begin_inset Formula $X$
\end_inset

 to 
\begin_inset Formula $I+F'(X)$
\end_inset

, where 
\begin_inset Formula $I$
\end_inset

 accounts for variables and 
\begin_inset Formula $F'$
\end_inset

 for recursive operations.
 Since 
\begin_inset Formula $I\cong1\times I$
\end_inset

, this first component fits into the assumed scheme by taking 
\begin_inset Formula $S_{i}=I$
\end_inset

 and 
\begin_inset Formula $R_{i}(X)=1$
\end_inset

.
 Indeed then, the left adjoint to 
\begin_inset Formula $R_{i}$
\end_inset

 is the 
\begin_inset Formula $L_{i}:X\mapsto0$
\end_inset

.
\end_layout

\begin_layout Example
Continuing Example
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "ex:lambda-endo"
plural "false"
caps "false"
noprefix "false"

\end_inset

, 
\begin_inset Formula $X\mapsto X\times X$
\end_inset

 is right adjoint to 
\begin_inset Formula $X\mapsto X+X$
\end_inset

.
 Moreover, 
\begin_inset Formula $X\mapsto X^{I}$
\end_inset

 is right adjoint to 
\begin_inset Formula $X\mapsto X\times I$
\end_inset

.
 If 
\begin_inset Formula $X$
\end_inset

 is a representable presheaf 
\begin_inset Formula $yn$
\end_inset

, then 
\begin_inset Formula $yn\times I=yn\times y1\simeq y(n+1)$
\end_inset

.
 Therefore, 
\begin_inset Formula $L'n=n+1$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Assumption
We assume given a monad 
\begin_inset Formula $T$
\end_inset

 relative to the embedding 
\begin_inset Formula $K^{+}$
\end_inset


\end_layout

\begin_layout Plain Layout
Typically, this will be a restriction of a term monad.
\end_layout

\begin_layout Assumption
We assume given a functor 
\begin_inset Formula $S:K^{+}\rightarrow Set$
\end_inset

.
\begin_inset Note Note
status open

\begin_layout Plain Layout
shall we rather enforce that if 
\begin_inset Formula $A+B\simeq C+D$
\end_inset

 then 
\begin_inset Formula $A\simeq C$
\end_inset

 or 
\begin_inset Formula $A\simeq D$
\end_inset

 or 
\begin_inset Formula $A\simeq C+D$
\end_inset

? Cf the notion of atomic
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Typically, this functor computes the 
\begin_inset Quotes eld
\end_inset

size
\begin_inset Quotes erd
\end_inset

 of a coproduct, added with the size 
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
We say that an object 
\begin_inset Formula $c$
\end_inset

 of 
\begin_inset Formula $C$
\end_inset

 preserves some shape of colimit (e.g., pushouts) if 
\begin_inset Formula $C(K-,c):C^{op}\rightarrow Set$
\end_inset

 preserves them.
\end_layout

\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Plain Layout
If 
\begin_inset Formula $C$
\end_inset

 is a presheaf category and 
\begin_inset Formula $K$
\end_inset

 is the yoneda embedding, so that we recover the usual meaning.
\end_layout

\begin_layout Assumption
We assume that all objects of 
\begin_inset Formula $C$
\end_inset

 preserve pushouts.
\end_layout

\begin_layout Assumption
\begin_inset Note Note
status open

\begin_layout Plain Layout
We assume given an object 
\begin_inset Formula $I$
\end_inset

 of 
\begin_inset Formula $C$
\end_inset

 preserving pushouts.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
This is the cas for 
\begin_inset Formula $C$
\end_inset

 the category of nominal sets, as presheaves over 
\begin_inset Formula $\mathbb{F}_{inj}$
\end_inset

 preserving pullbacks.
\end_layout

\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Assumption
\begin_inset Formula $TX=\mu Z.I+F_{X}(Z)$
\end_inset

 where 
\begin_inset Formula $F_{X}(Z)=\coprod_{i\in S_{X}}R_{X,i}(Z)$
\end_inset

 where 
\begin_inset Formula $R_{X,i}:C\rightarrow C$
\end_inset

 is right adjoint to 
\begin_inset Formula $L_{X,i}$
\end_inset

 and 
\begin_inset Formula $L_{X,i}K$
\end_inset

 is isomorphic to a colimit 
\begin_inset Formula $\int^{j}KL_{X,i,j}'$
\end_inset

.
 where 
\begin_inset Formula $L':D\rightarrow D$
\end_inset

 preserves pushouts.
 
\begin_inset Formula $T$
\end_inset

-algebra morphisms preserve 
\begin_inset Formula $I$
\end_inset

 and 
\begin_inset Formula $F_{-}$
\end_inset

.
\end_layout

\begin_layout Example
Take 
\begin_inset Formula $C$
\end_inset

 the category of nominal sets, as a reflective subcategory of 
\begin_inset Formula $Set^{\mathbb{F}_{m}}$
\end_inset

, and 
\begin_inset Formula $D$
\end_inset

 the full subcategory of representable presheaves.
 Take 
\begin_inset Formula $I$
\end_inset

 to be the identity nominal set: 
\begin_inset Formula $In=\underline{n}$
\end_inset

.
 Let 
\begin_inset Formula $TX=\mu Z.I+X+Z\times Z+Z\cdot O$
\end_inset

.
 Here 
\begin_inset Formula $T$
\end_inset

 is a free monad!! This is a monad with pattern variables and a binary operation
s.
\end_layout

\begin_layout Example
Je suggere la notation 
\begin_inset Formula $A,B,\dots$
\end_inset

 
\begin_inset Formula $\alpha,\beta$
\end_inset

 pour coproduits pour un tiny, 
\begin_inset Formula $X,Y,\dots$
\end_inset

 pour un normal.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Main result
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:Main-result"

\end_inset


\end_layout

\begin_layout Standard
Our main result is that a coequaliser diagram in 
\begin_inset Formula $\Kl T$
\end_inset

 selecting objects in 
\begin_inset Formula $D^{+}$
\end_inset

 either has no unifier, either has colimiting cocone.
\end_layout

\begin_layout Standard
Because working this disjunction is slightly inconvenient, we rephrase it
 a pure coequaliser by adding freely a terminal object.
\end_layout

\begin_layout Definition
Given a category 
\begin_inset Formula $E$
\end_inset

, let 
\begin_inset Formula $E^{*}$
\end_inset

 be 
\begin_inset Formula $E$
\end_inset

 extended freely with a terminal object.
\end_layout

\begin_layout Remark
Adding a terminal object results in adding a terminal cocone to all diagrams.
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
As a consequence, we have a following lemma.
\end_layout

\begin_layout Lemma
Let 
\begin_inset Formula $J$
\end_inset

 be a diagram in a category 
\begin_inset Formula $E$
\end_inset

.
 The following are equivalent:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $J$
\end_inset

 has a colimit has long as its category of cocones is not empty.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $J$
\end_inset

 has a colimit in 
\begin_inset Formula $E^{*}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Thus, we are going to work in 
\begin_inset Formula $\Kl T^{*}$
\end_inset

 rather than 
\begin_inset Formula $\Kl T$
\end_inset

.
\end_layout

\begin_layout Standard
The following result is also useful.
\end_layout

\begin_layout Lemma
Given a category 
\begin_inset Formula $E$
\end_inset

, the canonical functor 
\begin_inset Formula $E\rightarrow E^{*}$
\end_inset

 creates colimits.
\end_layout

\begin_layout Standard
This has some consequences: 
\end_layout

\begin_layout Enumerate
whenever the colimit in 
\begin_inset Formula $\Kl T^{*}$
\end_inset

 is not the terminal object, it is also a colimit in 
\begin_inset Formula $\Kl T$
\end_inset

;
\end_layout

\begin_layout Enumerate
existing colimits in 
\begin_inset Formula $\Kl T$
\end_inset

 are also colimits in 
\begin_inset Formula $\Kl T^{*}$
\end_inset

;
\end_layout

\begin_layout Enumerate
in particular, coproducts in 
\begin_inset Formula $\Kl T$
\end_inset

 (which are computed in 
\begin_inset Formula $\C$
\end_inset

) are also coproducts in 
\begin_inset Formula $\Kl T^{*}$
\end_inset

.
\end_layout

\begin_layout Notation
We denote by 
\begin_inset Formula $\top$
\end_inset

 the terminal object and by 
\begin_inset Formula $!$
\end_inset

 any terminal morphism.
\end_layout

\begin_layout Standard
Here is our main result.
 
\color red
TODO state it for 
\begin_inset Formula $D$
\end_inset

 rather than 
\begin_inset Formula $D^{+}$
\end_inset

 (easier to understand).
 
\end_layout

\begin_layout Theorem
Let 
\begin_inset Formula $\Kl{D^{+}}^{*}$
\end_inset

 be the full subcategory of 
\begin_inset Formula $\Kl T^{*}$
\end_inset

 consisting of objects of 
\begin_inset Formula $D^{+}\cup\{\top\}$
\end_inset

.
 Then, 
\begin_inset Formula $\Kl{D^{+}}^{*}$
\end_inset

 has coequalisers and the inclusion 
\begin_inset Formula $\Kl{D^{+}}^{*}\rightarrow\Kl T^{*}$
\end_inset

 preserves them.
\end_layout

\begin_layout Standard
In other words, any coequaliser diagram 
\begin_inset Formula $A\rightrightarrows TB$
\end_inset

 in 
\begin_inset Formula $\Kl T^{*}$
\end_inset

 where 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 are in 
\begin_inset Formula $D^{+}$
\end_inset

 has a colimit 
\begin_inset Formula $B\rightarrow TC$
\end_inset

 where 
\begin_inset Formula $C\in D^{+}\cup\{\top\}$
\end_inset

.
 Rephrasing it without the adjoined terminal object, this means that either
 such a coequaliser has a colimit which can be computed in 
\begin_inset Formula $\Kl{D^{+}}^{*}$
\end_inset

, either there is no cocone at all.
\end_layout

\begin_layout Section
Notations
\end_layout

\begin_layout Standard
We denote the identity morphism at an object 
\begin_inset Formula $x$
\end_inset

 by 
\begin_inset Formula $1_{x}$
\end_inset

.
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $(g_{i}:A_{i}\rightarrow B)_{i\in I}$
\end_inset

 is a family of arrows, we denote by 
\begin_inset Formula $[g_{i}]:\coprod_{i\in I}A_{i}\rightarrow B$
\end_inset

 the induced coproduct pairing.
\end_layout

\begin_layout Standard
Coproduct injections 
\begin_inset Formula $A_{i}\rightarrow\coprod_{i\in I}A_{i}$
\end_inset

 are typically denoted by 
\begin_inset Formula $in_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
Given an adjunction 
\begin_inset Formula $L\dashv R$
\end_inset

 and a morphism 
\begin_inset Formula $f:A\rightarrow RB$
\end_inset

, we denote by 
\begin_inset Formula $f^{*}:LA\rightarrow B$
\end_inset

 its transpose, and similarly, if 
\begin_inset Formula $g:LA\rightarrow B$
\end_inset

, then 
\begin_inset Formula $g^{*}:A\rightarrow RB$
\end_inset

.
 In particular, a Kleisli morphism 
\begin_inset Formula $f:A\rightarrow TB$
\end_inset

 induces a morphism 
\begin_inset Formula $f^{*}:TA\rightarrow TB$
\end_inset

 through the adjunction between 
\begin_inset Formula $\Kl T$
\end_inset

 and 
\begin_inset Formula $\C$
\end_inset

.
\end_layout

\begin_layout Standard
We denote the Kleisli composition of 
\begin_inset Formula $f:A\rightarrow TB$
\end_inset

 and 
\begin_inset Formula $g:TB\rightarrow TC$
\end_inset

 by 
\begin_inset Formula $f[g]=g^{*}\circ f$
\end_inset

.
\end_layout

\begin_layout Section
Pruning phase
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:pruning-phase"

\end_inset


\end_layout

\begin_layout Standard
Here we want to compute a pushout diagram in 
\begin_inset Formula $\Kl T^{*}$
\end_inset

, where one branch is a coproduct of free morphisms.
\begin_inset Formula 
\[
\xymatrix{\coprod_{i}KA_{i}\ar[r]^{\coprod_{i}Kf_{i}}\ar[d]_{[g_{i}]} & \coprod_{i}KB_{i}\ar[r]^{\eta} & T\coprod_{i}KB_{i}\ar[d]^{[u_{i}]}\\
X\ar[rr]_{\sigma} &  & Z
}
\]

\end_inset

where 
\begin_inset Formula $g_{i}:KA_{i}\rightarrow X$
\end_inset

 and 
\begin_inset Formula $u_{i}\in\hom_{\Kl T^{*}}(KB_{i},Z)$
\end_inset

.
 
\end_layout

\begin_layout Question
Can we prove in general that the pushout of a free morphism, if it exists,
 is a free morphism?
\end_layout

\begin_layout Standard
We denote such a situation by
\begin_inset Formula 
\[
X\vdash f_{1}:=g_{1},f_{2}:=g_{2},\dots\Rightarrow u_{1},u_{2},\dots;\sigma\dashv Z
\]

\end_inset

 abbreviated as 
\begin_inset Formula 
\[
X\vdash\vec{f}:=\vec{g}\Rightarrow\vec{u};\sigma\dashv Z
\]

\end_inset


\end_layout

\begin_layout Standard
or even
\begin_inset Formula 
\[
X\vdash(f_{i})_{i}:=g\Rightarrow u;\sigma\dashv Z
\]

\end_inset

 with 
\begin_inset Formula $g=[g_{i}]$
\end_inset

 and 
\begin_inset Formula $u=[u_{i}]$
\end_inset

.
 
\color red
Could we use Reddy's syntax, to differentiate the input/output? We need
 to know what his syntax is the internal language of.
\end_layout

\begin_layout Standard
The simplest case is when the coproduct is empty: then, the pushout is 
\begin_inset Formula $X$
\end_inset

.
\begin_inset Formula 
\[
\dfrac{}{X\vdash\vec{()}:=\vec{()}\Rightarrow\vec{()};1_{X}\dashv X}
\]

\end_inset


\end_layout

\begin_layout Standard
Another simple case is when 
\begin_inset Formula $X=\top$
\end_inset

.
 Then, the pushout is the terminal cocone.
 Thus we have the rule
\begin_inset Formula 
\[
\dfrac{}{\top\vdash\vec{f}:=\vec{g}\Rightarrow\vec{!};!\dashv\top}
\]

\end_inset


\end_layout

\begin_layout Standard
The pushout can be decomposed into smaller components.
\begin_inset Formula 
\begin{equation}
\dfrac{X\vdash\vec{f}:=\vec{g}\Rightarrow\vec{u};\sigma\dashv Z\qquad Z\vdash\vec{f'}:=\vec{g'}[\sigma]\Rightarrow\vec{u'};\sigma'\dashv Z'}{X\vdash\vec{f},\vec{f'}:=\vec{g},\vec{g'}\Rightarrow\vec{u}[\sigma'],\vec{u'};\sigma'\circ\sigma\dashv Z'}\label{eq:pruning-stepwise}
\end{equation}

\end_inset

This follows from the stepwise construction of coequalisers (Lemma
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lem:coeq-stepwise"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Thanks to the previous rule, we can focus on the case where the coproduct
 is the singleton (since we focus on finite coproducts of elements of 
\begin_inset Formula $D$
\end_inset

).
 Thus, we want to compute the pushout
\begin_inset Formula 
\[
\xymatrix{KA\ar[r]^{Kf}\ar[d]_{g} & KB\ar[r]^{\eta} & TKB\\
TC
}
\]

\end_inset


\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $TC\simeq I+C+\coprod_{i}R_{i}TC\times S_{i}$
\end_inset

 (Corollary
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "cor:lambek-lemma"
plural "false"
caps "false"
noprefix "false"

\end_inset

) and 
\begin_inset Formula $KA$
\end_inset

 is connected (Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:connected"
plural "false"
caps "false"
noprefix "false"

\end_inset

), 
\begin_inset Formula $KA\rightarrow TC$
\end_inset

 factors through one of the following coproduct injections:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\eta:C\hookrightarrow TC$
\end_inset

 (metavariable case)
\end_layout

\begin_layout Itemize
\begin_inset Formula $in_{i}:R_{i}TC\times S_{i}\hookrightarrow TC$
\end_inset

 (operation case)
\end_layout

\begin_layout Standard
In the next subsections, we discuss the different cases.
 
\end_layout

\begin_layout Subsection
Case 
\begin_inset Formula $KA\hookrightarrow C$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "subsec:pruning-metavar"

\end_inset


\end_layout

\begin_layout Standard
We want to compute the pushout of free morphisms
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\xymatrix{KA\ar[r]^{Kf}\ar[d]_{g} & KB\ar[r]^{\eta} & TKB\\
C\ar[d]_{\eta}\\
TC
}
\]

\end_inset

Since the functor 
\begin_inset Formula $\C\rightarrow\Kl T$
\end_inset

 is left adjoint, the pushout can be computed in 
\begin_inset Formula $\mathcal{C}$
\end_inset

.
 Now, 
\begin_inset Formula $C$
\end_inset

 is in 
\begin_inset Formula $D^{+}$
\end_inset

.
 Since 
\begin_inset Formula $KA$
\end_inset

 is connected (Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:connected"
plural "false"
caps "false"
noprefix "false"

\end_inset

), 
\begin_inset Formula $KA\xrightarrow{g}C$
\end_inset

 factors as 
\begin_inset Formula $KA\xrightarrow{g'}KD\rightarrow KD+C'\cong C$
\end_inset

.
 Therefore, we have to compute the pushout
\begin_inset Formula 
\[
\begin{array}{c}
\xymatrix{KA\ar[r]^{Kf}\ar[d] & KB\\
KD\ar[d]\\
KD+C'
}
\end{array}
\]

\end_inset

which is the composition of pushouts
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
YADE DIAGRAM {"graph":{"edges":[{"from":0,"id":6,"label":{"label":"","style":{"a
lignment":"left","bend":0,"dashed":false,"double":false,"head":"default","positi
on":0.5,"tail":"none"}},"to":1},{"from":0,"id":7,"label":{"label":"","style":{"al
ignment":"left","bend":0,"dashed":false,"double":false,"head":"default","positio
n":0.5,"tail":"none"}},"to":2},{"from":1,"id":8,"label":{"label":"","style":{"ali
gnment":"left","bend":0,"dashed":false,"double":false,"head":"default","position
":0.5,"tail":"none"}},"to":3},{"from":2,"id":9,"label":{"label":"","style":{"alig
nment":"left","bend":0,"dashed":false,"double":false,"head":"default","position"
:0.5,"tail":"none"}},"to":3},{"from":2,"id":10,"label":{"label":"","style":{"alig
nment":"left","bend":0,"dashed":false,"double":false,"head":"default","position"
:0.5,"tail":"none"}},"to":4},{"from":3,"id":11,"label":{"label":"","style":{"alig
nment":"left","bend":0,"dashed":false,"double":false,"head":"default","position"
:0.5,"tail":"none"}},"to":5},{"from":4,"id":12,"label":{"label":"","style":{"alig
nment":"left","bend":0,"dashed":false,"double":false,"head":"default","position"
:0.5,"tail":"none"}},"to":5}],"latexPreamble":"","nodes":[{"id":0,"label":{"isMat
h":true,"label":"KA","pos":[300,100]}},{"id":1,"label":{"isMath":true,"label":"K
B","pos":[500,100]}},{"id":2,"label":{"isMath":true,"label":"KD","pos":[300,300]
}},{"id":3,"label":{"isMath":true,"label":"KE","pos":[500,300]}},{"id":4,"label"
:{"isMath":true,"label":"KD+C'","pos":[300,500]}},{"id":5,"label":{"isMath":true
,"label":"KE+C'","pos":[500,500]}}],"sizeGrid":200},"version":5}
\end_layout

\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% https://q.uiver.app/?q=WzAsNixbMCwwLCJLQSJdLFsxLDAsIktCIl0sWzAsMSwiS0QiXSxbMSwxL
CJLRSJdLFswLDIsIktEK0MnIl0sWzEsMiwiS0UrQyciXSxbMCwxXSxbMCwyXSxbMSwzXSxbMiwzXSxbM
iw0XSxbMyw1XSxbNCw1XV0=
\end_layout

\begin_layout Plain Layout


\backslash
[
\backslash
begin{tikzcd} 	KA & KB 
\backslash

\backslash
 	KD & KE 
\backslash

\backslash
 	{KD+C'} & {KE+C'} 	
\backslash
arrow[from=1-1, to=1-2] 	
\backslash
arrow[from=1-1, to=2-1] 	
\backslash
arrow[from=1-2, to=2-2] 	
\backslash
arrow[from=2-1, to=2-2] 	
\backslash
arrow[from=2-1, to=3-1] 	
\backslash
arrow[from=2-2, to=3-2] 	
\backslash
arrow[from=3-1, to=3-2] 
\backslash
end{tikzcd}
\backslash
]
\end_layout

\end_inset


\end_layout

\end_inset

where 
\begin_inset Formula $E$
\end_inset

 is given by Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:finite-connected"
plural "false"
caps "false"
noprefix "false"

\end_inset


\end_layout

\begin_layout Standard
.
 Therefore, we have the rule
\begin_inset Formula 
\[
\dfrac{\begin{array}{c}
\xymatrix{KA\ar[r]^{Kf}\ar[d]_{g'} & KB\ar[d]^{u}\\
KD\ar[r]_{v} & KE
}
\end{array}\text{is a pushout}}{KD+C'\vdash f:=\eta\circ in_{1}\circ g'\Rightarrow\eta\circ in_{1}\circ u;T(v+C')\dashv KE+C'}
\]

\end_inset


\end_layout

\begin_layout Standard

\color red
TODO: examples.
\end_layout

\begin_layout Subsection
Case 
\begin_inset Formula $KA\hookrightarrow R_{i}TC\times S_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "subsec:case-KA-RiTC"

\end_inset


\end_layout

\begin_layout Standard
We want to compute the pushout
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\xymatrix{KA\ar[r]^{Kf}\ar[d]_{g} & KB\ar[r]^{\eta} & TKB\\
R_{i}TC\ar[d]_{in_{i}}\times S_{i}\\
TC
}
\]

\end_inset

A cocone in 
\begin_inset Formula $\Kl T$
\end_inset

 is given by an object 
\begin_inset Formula $Y$
\end_inset

 with morphisms 
\begin_inset Formula $KB\rightarrow TY\leftarrow C$
\end_inset

 such that the following diagram commutes.
\begin_inset Formula 
\[
\xymatrix{KA\ar[rr]^{Kf}\ar[d]_{g} &  & KB\ar[d]\\
R_{i}TC\times S_{i}\ar[r] & R_{i}TY\times S_{i}\ar[r] & TY
}
\]

\end_inset

Exploiting the fact that both 
\begin_inset Formula $KA$
\end_inset

 and 
\begin_inset Formula $KB$
\end_inset

 are connected (Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:connected"
plural "false"
caps "false"
noprefix "false"

\end_inset

) and the characterisation of 
\begin_inset Formula $TY$
\end_inset

 as a coproduct 
\begin_inset Formula $R_{i}TY\times S_{i}+\dots$
\end_inset

 (Corollary
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "cor:lambek-lemma"
plural "false"
caps "false"
noprefix "false"

\end_inset

), it follows that 
\begin_inset Formula $KB\rightarrow TY$
\end_inset

 factors through 
\begin_inset Formula $R_{i}TY\times S_{i}\hookrightarrow TY$
\end_inset

.
 Since 
\begin_inset Formula $R_{i}TY\times S_{i}\rightarrow TY$
\end_inset

 is monomorphic (as a coproduct injection, again by Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:inj-are-mono"
plural "false"
caps "false"
noprefix "false"

\end_inset

), a cocone in 
\begin_inset Formula $\Kl T$
\end_inset

 is given by an object 
\begin_inset Formula $Y$
\end_inset

 with morphisms 
\begin_inset Formula $C\rightarrow TY$
\end_inset

 and 
\begin_inset Formula $KB\rightarrow R_{i}TY\times S_{i}$
\end_inset

 such that the following diagram commutes.
\begin_inset Formula 
\[
\xymatrix{KA\ar[r]^{Kf}\ar[d]_{g} & KB\ar[d]\\
R_{i}TC\ar[r]\times S_{i} & R_{i}TY\times S_{i}
}
\]

\end_inset

which is equivalent to the commutation of the two following diagrams
\begin_inset Formula 
\[
\xymatrix{KA\ar[r]^{Kf}\ar[d]_{g_{2}} & KB\ar[d]\\
\ar[r]_{=}S_{i} & S_{i}
}
\quad\xymatrix{KA\ar[r]^{Kf}\ar[d]_{g_{1}} & KB\ar[d]\\
R_{i}TC\ar[r] & R_{i}TY
}
\]

\end_inset

Uniqueness of 
\begin_inset Formula $KB\rightarrow S_{i}$
\end_inset

 making the left diagram commutes is ensured by the fact that 
\begin_inset Formula $Kf$
\end_inset

 is epimorphic (Assumption
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:epis"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 Thus, we already have the following rule in case no such morphism exists
 (this happens concretely for 
\begin_inset Formula $M(x):=y$
\end_inset

 when 
\begin_inset Formula $y\neq x$
\end_inset

).
\begin_inset Formula 
\begin{equation}
\dfrac{g_{2}\text{ does not factor through }Kf}{C\vdash f:=in_{i}\circ(g_{1},g_{2})\Rightarrow!;!\dashv\top}\label{eq:pruning-facto-wo-regular}
\end{equation}

\end_inset

In fact, using Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:effective-epi"
plural "false"
caps "false"
noprefix "false"

\end_inset

, the premise can be rephrased as an ineqality:
\begin_inset Formula 
\[
\dfrac{\Ker(Kf)\xrightarrow{p_{1}}KA\xrightarrow{g_{2}}S_{i}\neq\Ker(Kf)\xrightarrow{p_{2}}KA\xrightarrow{g_{2}}S_{i}}{C\vdash f:=in_{i}\circ(g_{1},g_{2})\Rightarrow!;!\dashv\top}
\]

\end_inset


\end_layout

\begin_layout Remark
If 
\begin_inset Formula $S_{i}$
\end_inset

 is orthogonal
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after "Definition 1.32"
key "Adamek"
literal "false"

\end_inset

 to all morphisms (i.e., given any span 
\begin_inset Formula $S_{i}\leftarrow A\rightarrow B$
\end_inset

, there exists a unique 
\begin_inset Formula $B\rightarrow S_{i}$
\end_inset

 completing the triangle), as in the case where 
\begin_inset Formula $S_{i}$
\end_inset

 is the output type 
\begin_inset Quotes eld
\end_inset

dirac
\begin_inset Quotes erd
\end_inset

, then this rule never applies.
\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $R_{i}$
\end_inset

 has a left adjoint 
\begin_inset Formula $L_{i}$
\end_inset

 such that 
\begin_inset Formula $L_{i}K=\int^{j}KL'_{i,j}$
\end_inset

 (Assumption
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:F-shape"
plural "false"
caps "false"
noprefix "false"

\end_inset

), the right diagram is equivalent to making the following diagram commute.
\begin_inset Formula 
\[
\xymatrix{\coprod_{j}KL_{i,j}'A\ar[rr]^{\coprod_{j}KL_{i,j}'f}\ar[d]_{g_{1}^{*}} &  & \coprod_{j}KL_{i,j}'B\ar[d]^{u}\\
TC\ar[rr]_{\sigma} &  & TY
}
\]

\end_inset

Thus, this justifies the following rule
\begin_inset Formula 
\begin{equation}
\dfrac{C\vdash(L'_{i,j}f)_{j}:=g_{1}^{*}\Rightarrow u;\sigma\dashv Y\quad g_{2}=h\circ Kf}{C\vdash f:=in_{i}\circ(g_{1},g_{2})\Rightarrow in_{i}\circ u^{*};\sigma\dashv Y}\label{eq:pruning-rec}
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Coequalising phase
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:coequalising-phase"

\end_inset


\end_layout

\begin_layout Standard
Here we want to compute a coequalising diagram in 
\begin_inset Formula $\Kl T^{*}$
\end_inset

, where the domain is in 
\begin_inset Formula $D^{+}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\xymatrix{\coprod_{i}KA_{i}\ar@<+.5ex>[r]^{[t_{i}]}\ar@<-.5ex>[r]_{[u_{i}]} & \Gamma\ar[r]^{\sigma} & \Delta}
\]

\end_inset

where 
\begin_inset Formula $t_{i},u_{i}\in\hom_{\Kl T^{*}}(KB_{i},\Gamma)$
\end_inset

.
 We denote such a situation by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\Gamma\vdash t_{1}=_{A_{1}}u_{1},\dots t_{p}=_{A_{p}}u_{p}\Rightarrow\sigma\dashv\Delta
\]

\end_inset

 that we sometimes abbreviate as 
\begin_inset Formula 
\[
\Gamma\vdash\vec{t}=_{\vec{A}}\vec{u}\Rightarrow\sigma\dashv\Delta
\]

\end_inset


\end_layout

\begin_layout Standard
The simplest case is when the coproduct is empty: then, the coequaliser
 is 
\begin_inset Formula $\Gamma$
\end_inset


\begin_inset Formula 
\[
\dfrac{}{\Gamma\vdash()\Rightarrow1_{\Gamma}\dashv\Gamma}
\]

\end_inset


\end_layout

\begin_layout Standard
Another simple case is when 
\begin_inset Formula $\Gamma=\top$
\end_inset

.
 Then, the pushout is the terminal cocone.
 Thus we have the rule
\begin_inset Formula 
\[
\dfrac{}{\top\vdash\vec{t}=_{\vec{A}}\vec{u}\Rightarrow!\dashv\top}
\]

\end_inset


\end_layout

\begin_layout Standard
Again, thanks to Lemma
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lem:coeq-stepwise"
plural "false"
caps "false"
noprefix "false"

\end_inset

, such a coequaliser can be decomposed into smaller components.
\begin_inset Formula 
\begin{equation}
\dfrac{\Gamma\vdash t_{0}=_{n_{0}}u_{0}\Rightarrow\sigma_{0}\dashv\Delta_{1}\qquad\Delta_{1}\vdash\vec{t}[\text{\ensuremath{\sigma_{0}]}}=_{\vec{n}}\vec{u}[\text{\ensuremath{\sigma_{0}]}}\Rightarrow\sigma\dashv\Delta_{2}}{\Gamma\vdash t_{0}=_{n_{0}}u_{0},\vec{t}=_{\vec{n}}\vec{u}\Rightarrow\sigma_{0}[\sigma]\dashv\Delta_{2}}\label{eq:unify-stepwise}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Thanks to the previous rules, we can focus on the case where the coproduct
 is a singleton (since we focus on finite coproducts of elements of 
\begin_inset Formula $D$
\end_inset

), and 
\begin_inset Formula $\Gamma=TC$
\end_inset

.
 Thus, we want to compute the coequaliser
\begin_inset Formula 
\[
\xymatrix{KA\ar@<+.5ex>[r]^{t}\ar@<-.5ex>[r]_{u} & TC}
\]

\end_inset


\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $TC\simeq I+C+\coprod_{i}R_{i}TC$
\end_inset

 (Assumption
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:F-shape"
plural "false"
caps "false"
noprefix "false"

\end_inset

) and 
\begin_inset Formula $KA$
\end_inset

 is connected (Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:connected"
plural "false"
caps "false"
noprefix "false"

\end_inset

), 
\begin_inset Formula $t,u:KA\rightarrow TC$
\end_inset

 factor through one of the following coproduct injections:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\eta:C\hookrightarrow TC$
\end_inset

 (metavariables)
\end_layout

\begin_layout Itemize
\begin_inset Formula $in_{i}:R_{i}TC\times S_{i}\hookrightarrow TC$
\end_inset

 (variables / operations)
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Formula $in_{I}:I\hookrightarrow TC$
\end_inset

 (variables)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the next subsections, we discuss the different cases.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\eta=\dots$
\end_inset

, or 
\begin_inset Formula $M(\vec{x})=...$
\end_inset

, in case of a successful occur-check, in Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:occur-check"
plural "false"
caps "false"
noprefix "false"

\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $\eta=\eta$
\end_inset

, or 
\begin_inset Formula $M(\vec{x})=N(\vec{y})$
\end_inset

, in Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:case-metavars"
plural "false"
caps "false"
noprefix "false"

\end_inset

, which is partly redundant with the  previous case
\end_layout

\begin_layout Itemize
\begin_inset Formula $in_{i}=in_{i}$
\end_inset

, or 
\begin_inset Formula $o(\vec{t})=o(\vec{u})$
\end_inset

, in Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:case-op-op"
plural "false"
caps "false"
noprefix "false"

\end_inset

; 
\end_layout

\begin_layout Standard
Let us mention schematically some other cases, which can never be unified
 in 
\begin_inset Formula $\Kl T$
\end_inset

, in most case by Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:connected"
plural "false"
caps "false"
noprefix "false"

\end_inset

, and thus are solved using 
\begin_inset Formula $\top$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $in_{i}=in_{i'}$
\end_inset

 with 
\begin_inset Formula $i\neq i'$
\end_inset

 (in the examples, 
\begin_inset Formula $o(\vec{t})=o'(\vec{u})$
\end_inset

 when 
\begin_inset Formula $o\neq o'$
\end_inset

) 
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Formula $M(\vec{x})=y$
\end_inset

 when 
\begin_inset Formula $y\notin\vec{x}$
\end_inset

 (thi
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Formula $in_{i}=in_{I}$
\end_inset

 (in the examples, 
\begin_inset Formula $o(\vec{t})=x$
\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\eta=\dots$
\end_inset

 , or 
\begin_inset Formula $M(\vec{x})=u$
\end_inset

, with failing occur-check (Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:occur-check"
plural "false"
caps "false"
noprefix "false"

\end_inset

), i.e., when 
\begin_inset Formula $M$
\end_inset

 appears deep in 
\begin_inset Formula $u$
\end_inset

.
\end_layout

\begin_layout Subsection
Successful occur-check
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "subsec:occur-check"

\end_inset

The occur-check phase is described in more details in Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:occur-check"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Here, we assume that 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $C\simeq KB+C'$
\end_inset

 for some 
\begin_inset Formula $B$
\end_inset

, 
\begin_inset Formula $C'$
\end_inset

; 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $t:KA\rightarrow TC$
\end_inset

 factors as 
\begin_inset Formula $KA\xrightarrow{f}KB\xhookrightarrow{in_{B}}TC\simeq KB+\dots$
\end_inset

;
\end_layout

\begin_layout Enumerate
\begin_inset Formula $u:KA\rightarrow TC$
\end_inset

 factors as 
\begin_inset Formula $KA\xrightarrow{g}TC'\xhookrightarrow{in_{TC'}}TC$
\end_inset

.
\end_layout

\begin_layout Standard
In the examples, the second condition means that 
\begin_inset Formula $t$
\end_inset

 is a metavariable, and the last condition means that this metavariable
 does not occur in 
\begin_inset Formula $u$
\end_inset

, i.e., the occur-check is successful.
\end_layout

\begin_layout Standard
Thus, the coequaliser
\begin_inset Formula 
\[
\xymatrix{KA\ar@<+.5ex>[r]^{t}\ar@<-.5ex>[r]_{u} & TC}
\]

\end_inset


\end_layout

\begin_layout Standard
is a coequaliser (in 
\begin_inset Formula $\Kl T^{*}$
\end_inset

) of the shape
\begin_inset Formula 
\[
\xymatrix{ & Y\ar[rd]\\
X\ar[ru]\ar[rd] &  & Y+Z\\
 & Z\ar[ru]
}
,
\]

\end_inset

with 
\begin_inset Formula $X=KA$
\end_inset

, 
\begin_inset Formula $Y=TKB$
\end_inset

 and 
\begin_inset Formula $Z=TC'$
\end_inset


\end_layout

\begin_layout Remark
There is a canonical isomorphism between the category of cocones over such
 a coequaliser diagram and the category of cocones over the pushout diagram
 
\begin_inset Formula $Y\leftarrow X\rightarrow Z$
\end_inset

 exists.
\end_layout

\begin_layout Remark
Therefore, computing this coequaliser amounts to computing the pushout.
 We are thus in the situation of the pruning phase, and we can justify the
 rule
\begin_inset Formula 
\[
\dfrac{C'\vdash f:=g\Rightarrow v;\sigma\dashv Z}{KB+C'\vdash in_{B}\circ f=in_{TC'}\circ g\Rightarrow[v,\sigma]\dashv Z}
\]

\end_inset


\end_layout

\begin_layout Subsection
Case 
\begin_inset Formula $M(x_{1},\dots,x_{m})=_{q}N(y_{1},\dots,y_{n})$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "subsec:case-metavars"

\end_inset

Here we are in the situation where 
\begin_inset Formula $t,u:KA\rightarrow TC$
\end_inset

 factor as 
\begin_inset Formula $t',u':KA\rightarrow C$
\end_inset

 through 
\begin_inset Formula $\eta:C\rightarrow TC$
\end_inset

.
 Note that since postcomposition with 
\begin_inset Formula $\eta$
\end_inset

 is precisely the left adjoint (and thus cocontinuous) functor from 
\begin_inset Formula $\C$
\end_inset

 to 
\begin_inset Formula $\Kl T$
\end_inset

, it is enough to compute the coequaliser in 
\begin_inset Formula $\C$
\end_inset

 and then precompose it with 
\begin_inset Formula $\eta$
\end_inset

.
\end_layout

\begin_layout Standard
We assume the following
\end_layout

\begin_layout Itemize
\begin_inset Formula $C\simeq\coprod_{i\in\{a,b\}}KB_{i}+C'$
\end_inset

, where 
\begin_inset Formula $a,b$
\end_inset

 may not be distinct (in practice 
\begin_inset Formula $C$
\end_inset

 is in 
\begin_inset Formula $D^{+}$
\end_inset

), 
\end_layout

\begin_layout Itemize
\begin_inset Formula $t',u':KA\rightarrow C$
\end_inset

 factor respectively as 
\begin_inset Formula $KB_{a}\rightarrow C$
\end_inset

 and 
\begin_inset Formula $KB_{b}\rightarrow C$
\end_inset

.
\end_layout

\begin_layout Standard
Note that if 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are distinct, then the case we describe is redundant with some specific
 case of the pruning phase (Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:pruning-metavar"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
We want to compute the coequaliser of the free algebra morphisms.
\begin_inset Formula 
\[
\xymatrix{ & KB_{a}\ar[rd]\\
KA\ar[ru]^{Kf}\ar[rd]_{Kg} &  & \coprod_{i\in\{a,b\}}KB_{i}+C'\\
 & KB_{b}\ar[ru]
}
\]

\end_inset


\end_layout

\begin_layout Lemma
The coequaliser of a diagram of this shape, in any category which has the
 involved colimits, is 
\begin_inset Formula $X+C'$
\end_inset

, where 
\begin_inset Formula $X$
\end_inset

 is the coequaliser or 
\begin_inset Formula $Kf$
\end_inset

 and 
\begin_inset Formula $Kg$
\end_inset

 if 
\begin_inset Formula $a=b$
\end_inset

, or the pushout of 
\begin_inset Formula $Kf$
\end_inset

 and 
\begin_inset Formula $Kg$
\end_inset

, otherwise.
\end_layout

\begin_layout Standard
Thanks to Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:finite-connected"
plural "false"
caps "false"
noprefix "false"

\end_inset

, we know that such a colimit exists in 
\begin_inset Formula $D^{+}$
\end_inset

.
\end_layout

\begin_layout Standard
All the arguments in this section justify the following rule, whose premise
 can always be satisfied.
\begin_inset Formula 
\[
\dfrac{\xymatrix{ & KB_{a}\ar[rd]\\
KA\ar[ru]^{Kf}\ar[rd]_{Kg} &  & \coprod_{i\in\{a,b\}}KB_{i}+C'\ar[r]^{\sigma} & X\text{ is a coequaliser}\\
 & KB_{b}\ar[ru]
}
}{\coprod_{i\in\{a,b\}}KB_{i}+C'\vdash\eta\circ in_{a}\circ Kf=\eta\circ in_{b}\circ Kf\Rightarrow\eta\circ\sigma\dashv X}
\]

\end_inset


\end_layout

\begin_layout Subsection
Case 
\begin_inset Formula $o(\vec{t})=o(\vec{u})$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "subsec:case-op-op"

\end_inset

Here we assume that 
\begin_inset Formula $t,u:KA\rightarrow TC$
\end_inset

 factors as 
\begin_inset Formula $(t',s_{1}),(u',s_{2}):KA\rightarrow R_{i}TC\times S_{i}$
\end_inset

 through 
\begin_inset Formula $R_{i}TC\times S_{i}\hookrightarrow TC$
\end_inset

.
 A cocone in 
\begin_inset Formula $\Kl T$
\end_inset

 is given by an object 
\begin_inset Formula $Y$
\end_inset

 with a morphism 
\begin_inset Formula $C\xrightarrow{\sigma}TY$
\end_inset

 such that the following diagram commutes.
\begin_inset Formula 
\[
\xymatrix{KA\ar[r]^{t',s_{1}}\ar[d]_{u',s_{2}} & R_{i}TC\times S_{i}\ar[r]^{R_{i}\sigma^{*}\times S_{i}} & R_{i}TY\times S_{i}\ar[d]^{in_{i}}\\
R_{i}TC\times S_{i}\ar[r]_{R_{i}\sigma^{*}\times S_{i}} & R_{i}TY\times S_{i}\ar[r]_{in_{i}} & TY
}
\]

\end_inset

Since 
\begin_inset Formula $R_{i}TY\times S_{i}\rightarrow TY$
\end_inset

 is monomorphic (as a coproduct injection, by Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:inj-are-mono"
plural "false"
caps "false"
noprefix "false"

\end_inset

), the above commutation is equivalent to commutation of the following diagram.
\begin_inset Formula 
\[
\xymatrix{KA\ar[r]^{t',s_{1}}\ar[d]_{u',s_{2}} & R_{i}TC\ar[d]^{R_{i}\sigma^{*}\times S_{i}}\times S_{i}\\
R_{i}TC\times S_{i}\ar[r]_{R_{i}\sigma^{*}\times S_{i}} & R_{i}TY\times S_{i}
}
\]

\end_inset

which is equivalent to the commutation of the two following diagrams
\begin_inset Formula 
\[
\xymatrix{KA\ar[r]^{s_{1}}\ar[d]_{s_{2}} & S_{i}\ar[d]^{=}\\
S_{i}\ar[r]_{=} & S_{i}
}
\quad\xymatrix{KA\ar[r]^{t'}\ar[d]_{u'} & R_{i}TC\ar[d]^{R_{i}\sigma^{*}}\\
R_{i}TC\ar[r]_{R_{i}\sigma^{*}} & R_{i}TY
}
\]

\end_inset


\end_layout

\begin_layout Standard
Clearly, if 
\begin_inset Formula $s_{1}\neq s_{2}$
\end_inset

 there is no unifier so that we have the rule
\begin_inset Formula 
\[
\dfrac{s_{1}\neq s_{2}}{C\vdash in_{i}\circ(t',s_{1})=in_{i}\circ(u',s_{2})\Rightarrow!\dashv\top}
\]

\end_inset

.
 We assume the contrary: 
\begin_inset Formula $s_{1}=s_{2}(=s)$
\end_inset

.
 Since 
\begin_inset Formula $R_{i}$
\end_inset

 has a left adjoint 
\begin_inset Formula $L_{i}$
\end_inset

 such that 
\begin_inset Formula $L_{i}K=\int^{j}KL'_{i,j}$
\end_inset

 (Assumption
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:F-shape"
plural "false"
caps "false"
noprefix "false"

\end_inset

), the right one is equivalent to making the following diagram commute.
\begin_inset Formula 
\[
\xymatrix{\coprod_{j}KL_{i,j}'A\ar[rr]^{t'^{*}}\ar[d]_{u'^{*}} &  & TC\ar[d]^{\sigma^{*}}\\
TC\ar[rr]_{\sigma^{*}} &  & TY
}
\]

\end_inset

Thus, this justifies the following rule 
\begin_inset Formula 
\begin{equation}
\dfrac{C\vdash t'^{*}=u'^{*}\Rightarrow\sigma\dashv Y}{C\vdash in_{i}\circ(t',s)=in_{i}\circ(u',s)\Rightarrow\sigma\dashv Y}\label{eq:unifying-rec}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Formula 
\[
\dfrac{o\text{ has binding arity \ensuremath{\vec{n}}}\qquad\Gamma\vdash\vec{t}=_{q+\vec{n}}\vec{u}\Rightarrow\sigma\dashv\Delta}{\Gamma\vdash o(\vec{t})=_{q}o(\vec{u})\Rightarrow\sigma\dashv\Delta}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Occur-check
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:occur-check"

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
plus de discussion: cf occurcheck.lyx
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The occur-check allows to jump from the coequalising phase (Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:coequalising-phase"
plural "false"
caps "false"
noprefix "false"

\end_inset

) to the pruning phase (Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:pruning-phase"
plural "false"
caps "false"
noprefix "false"

\end_inset

), whenever the metavariable appearing at the toplevel of the l.h.s does not
 appear in the r.h.s.
 On the other hand, if it appears on the r.h.s and is not top-level, then
 there is no unifier: this section is devoted to a proof of this fact, see
 Corollary
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "cor:occurcheck-final"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
We prove hits by working in the category of presheaves on 
\begin_inset Formula $D$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Let 
\begin_inset Formula $D_{0}$
\end_inset

 denote the discrete presheaf category consisting of objects of 
\begin_inset Formula $D$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $J:\C\rightarrow\hat{D}$
\end_inset

 mapping 
\begin_inset Formula $c$
\end_inset

 to the nerve functor 
\begin_inset Formula $\C(K-,c)$
\end_inset

.
 Moreover, let 
\begin_inset Formula $G:\hat{D}\rightarrow\hat{D}$
\end_inset

 mapping 
\begin_inset Formula $P$
\end_inset

 to 
\begin_inset Formula $\coprod_{i}JS_{i}\times\prod_{j}P_{L_{i,j}-}$
\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Since 
\begin_inset Formula $S_{i}$
\end_inset

 is orthogonal to any morphism (Assumption
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:F-shape"
plural "false"
caps "false"
noprefix "false"

\end_inset

), 
\begin_inset Formula $JS_{i}$
\end_inset

 is constant on each connected component of 
\begin_inset Formula $D$
\end_inset

.
\end_layout

\end_inset

 Then, 
\begin_inset Formula $GJ$
\end_inset

 is isomorphic to 
\begin_inset Formula $JF$
\end_inset

, i.e., the following square commutes up to isomorphism.
\begin_inset Formula 
\[
\xymatrix{\C\ar[r]^{F}\ar[d]_{J} & \C\ar[d]^{J}\\
\hat{D}\ar[r]_{G} & \hat{D}
}
\]

\end_inset

Note that 
\begin_inset Formula $J$
\end_inset

 has a left adjoint (since it is continuous), but more importantly, it preserves
 coproducts (Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:connected"
plural "false"
caps "false"
noprefix "false"

\end_inset

) and filtered colimits (Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:compact"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 As a consequence, we following square commutes up to isomorphism.
\begin_inset Formula 
\[
\xymatrix{\C\ar[r]^{T}\ar[d]_{J} & \C\ar[d]^{J}\\
\hat{D}\ar[r]_{G^{*}} & \hat{D}
}
\]

\end_inset


\end_layout

\begin_layout Standard
Then, we can define the size of a morphism as a universal 
\begin_inset Formula $G$
\end_inset

-algebra morphism to the constant presheaf 
\begin_inset Formula $\mathbb{N}$
\end_inset

, or define the occur-check by induction as a 
\begin_inset Formula $G$
\end_inset

-algebra morphism from 
\begin_inset Formula $\hom_{\C}(K-,T(B+C))$
\end_inset

 to 
\begin_inset Formula $\hom_{\C}(K-,TC)+1$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Preliminary lemma
\end_layout

\begin_layout Standard
There is a 
\begin_inset Formula $M$
\end_inset

-algebra structure 
\begin_inset Formula $M\mathbb{N}\rightarrow\mathbb{N}$
\end_inset

 on the constant presheaf 
\begin_inset Formula $\mathbb{N}$
\end_inset

 that adds one to the maximum of the arguments.
 For any 
\begin_inset Formula $o:X\rightarrow\mathbb{N}$
\end_inset

, this induces an algebra morphism 
\begin_inset Formula $MX\xrightarrow{|-|_{o}}\mathbb{N}$
\end_inset

, which basically computes the maximal depth of an element of 
\begin_inset Formula $MX$
\end_inset

, with custom depth for leaves in 
\begin_inset Formula $X$
\end_inset

 as specified by 
\begin_inset Formula $o$
\end_inset

.
 In practice we will have 
\begin_inset Formula $X$
\end_inset

 as the initial presheaf (then flatness does not depend on 
\begin_inset Formula $o$
\end_inset

), or the terminal presheaf.
 
\end_layout

\begin_layout Definition
Let 
\begin_inset Formula $o:X\rightarrow\mathbb{N}$
\end_inset

.
 A natural transformation 
\begin_inset Formula $n:A\rightarrow MX$
\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
between families in 
\begin_inset Formula $Set^{D_{0}}$
\end_inset


\end_layout

\end_inset

 is said 
\emph on

\begin_inset Formula $o$
\end_inset

-flat
\emph default
 if 
\begin_inset Formula $A\rightarrow MX\xrightarrow{|-|_{o}}\mathbb{N}$
\end_inset

 is constant.
 It is said 
\emph on
flat
\emph default
 if there exists 
\begin_inset Formula $o$
\end_inset

 that makes it 
\begin_inset Formula $o$
\end_inset

-flat.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Any morphism out of a representable presheaf 
\begin_inset Formula $yd:D_{0}\rightarrow Set$
\end_inset

 (which is empty anywhere else than in the 
\begin_inset Formula $d$
\end_inset

-component where it is a singleton set) is flat.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
\begin_inset CommandInset label
LatexCommand label
name "exa:flat-nattrans-yoneda"

\end_inset

Any natural transformation out of a representable presheaf is 
\begin_inset Formula $0$
\end_inset

-flat.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Intuitively, the height of an element in 
\begin_inset Formula $MX$
\end_inset

 is the smallest index where it appears in the initial chain.
 Flatness follows from representable presheaves being tiny.
\end_layout

\end_inset


\end_layout

\begin_layout Example
The crucial lemma is the following.
\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:pbk-lemma-occur-check"

\end_inset

Let 
\begin_inset Formula $A\xrightarrow{n}M\emptyset$
\end_inset

 be a flat morphism.
 Then, the following diagram is a pullback
\begin_inset Formula 
\[
\xymatrix{A+A\times_{M\emptyset}A\ar[r]\ar[d] & MA\ar[d]^{n^{*}}\\
A\ar[r]_{n} & M\emptyset
}
\]

\end_inset


\end_layout

\begin_layout Proof
See Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:proof-prop-pbk-lemma-occur-check"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
As an example, if 
\begin_inset Formula $D$
\end_inset

 is discrete, and if 
\begin_inset Formula $n$
\end_inset

 is 
\begin_inset Formula $yd\rightarrow M\emptyset$
\end_inset

, choosing an element 
\begin_inset Formula $u\in M\emptyset_{d}$
\end_inset

, then what it says is that given any element 
\begin_inset Formula $t\in MA_{d}$
\end_inset

 such that 
\begin_inset Formula $t[u]=u$
\end_inset

, either 
\begin_inset Formula $t=\eta(id_{d})$
\end_inset

, i.e., 
\begin_inset Formula $t$
\end_inset

 is a metavariable, either 
\begin_inset Formula $t=u$
\end_inset

.
\end_layout

\begin_layout Question
Can we prove this more categorically by simply assuming that 
\begin_inset Formula $A$
\end_inset

 is tiny?
\begin_inset Note Note
status open

\begin_layout Plain Layout
J'ai l'impression que c'est stable par domaine, enfin d'apres la preuve
 que j'ai faite, si on arrive a donner une mesure 
\begin_inset Formula $|-|$
\end_inset

 telle que 
\begin_inset Formula $|t[u]|\geq||t||+|u|$
\end_inset

 ou 
\begin_inset Formula $||t||$
\end_inset

 vaut 0 si c'est 
\begin_inset Formula $\eta$
\end_inset

, 
\begin_inset Formula $-\infty$
\end_inset

 si c'est clos, et 
\begin_inset Formula $1$
\end_inset

 sinon.
 On peut tout simplement relever cette mesure au domaine (a condition que
 le morphisme de monades preserve 
\begin_inset Formula $||-||$
\end_inset

).
 En tout cas on a l'impression qu'on pourrait donner une telle mesure pour
 n'importe quel monade libre generee par un endo pra.
\end_layout

\end_inset


\end_layout

\begin_layout Corollary
Let 
\begin_inset Formula $A\xrightarrow{n}M1$
\end_inset

 be a flat morphism.
 Then, the following diagram is a pullback
\begin_inset Formula 
\[
\xymatrix{A+A\times_{M1}A\ar[r]\ar[d] & M(A+1)\ar[d]^{n^{*}}\\
A\ar[r]_{n} & M1
}
\]

\end_inset


\end_layout

\begin_layout Proof
Consider the functor 
\begin_inset Formula $G'=G+1$
\end_inset

.
 By universal property, it precisely generates the monad 
\begin_inset Formula $M'=M(1+-)$
\end_inset

, so we apply Proposition
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "prop:pbk-lemma-occur-check"
plural "false"
caps "false"
noprefix "false"

\end_inset

 for 
\begin_inset Formula $M'$
\end_inset

 (any 
\begin_inset Formula $M'$
\end_inset

-flat morphism becomes 
\begin_inset Formula $M$
\end_inset

-flat by assigning the unit weight to the leaf in 
\begin_inset Formula $1$
\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Corollary
Let 
\begin_inset Formula $A\xrightarrow{n}M1$
\end_inset

 be a flat morphism and 
\begin_inset Formula $\sigma:B\rightarrow M1$
\end_inset

 be another one.
 Then, the following diagram is a pullback 
\begin_inset Formula 
\[
\xymatrix{A\times_{M1}MB+A\times_{M1}A\ar[r]\ar[d] & M(A+B)\ar[d]^{[u,\sigma]^{*}}\\
A\ar[r]_{u} & M1
}
\]

\end_inset


\end_layout

\begin_layout Proof
Note that the right morphism decomposes as
\end_layout

\begin_layout Proof
\begin_inset ERT
status open

\begin_layout Plain Layout

% YADE DIAGRAM pbkB-present.json
\end_layout

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
[
\backslash
begin{tikzcd} 	&& {M(A+B)} 
\backslash

\backslash
 	&& {MM(A+1)} 
\backslash

\backslash
 	{A+A
\backslash
times_{M1}A} && {M(A+1)} 
\backslash

\backslash
 	A && M1 	
\backslash
arrow[from=3-3, to=4-3] 	
\backslash
arrow[from=3-1, to=3-3] 	
\backslash
arrow[from=3-1, to=4-1] 	
\backslash
arrow["u"', from=4-1, to=4-3] 	
\backslash
arrow[from=1-3, to=2-3] 	
\backslash
arrow["
\backslash
mu", from=2-3, to=3-3] 
\backslash
end{tikzcd}
\backslash
]
\end_layout

\end_inset


\end_layout

\end_inset

where we inserted the known pullback at the bottom.
 Since coproducts are pullback stable, it is enough to show that 
\begin_inset Formula $(A\times_{M1}A)\times_{M(A+1)}M(A+B)=A\times_{M1}A$
\end_inset

 and 
\begin_inset Formula $A\times_{M1}MB=A\times_{M(A+1)}M(A+B)$
\end_inset

, which we do in the following diagrams (all squares are pullbacks).
\end_layout

\begin_layout Proof
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% %YADE DIAGRAM FILE: pbkBsimp.json
\end_layout

\begin_layout Plain Layout

 
\backslash
[
\backslash
begin{tikzcd} 	{A
\backslash
times_{M1} A} & A && {M(A+B)} 
\backslash

\backslash
 	& A && {MM(A+1)} 
\backslash

\backslash
 	{A
\backslash
times_{M1} A} & A & {A+1+GM(A+1)} & {M(A+1)} 
\backslash

\backslash
 	A &&& M1 	
\backslash
arrow[from=3-4, to=4-4] 	
\backslash
arrow[from=3-1, to=3-2] 	
\backslash
arrow[from=3-1, to=4-1] 	
\backslash
arrow["u"', from=4-1, to=4-4] 	
\backslash
arrow[from=1-4, to=2-4] 	
\backslash
arrow["
\backslash
mu", from=2-4, to=3-4] 	
\backslash
arrow["{in_1}"', from=3-2, to=3-3] 	
\backslash
arrow["
\backslash
cong"', from=3-3, to=3-4] 	
\backslash
arrow[Rightarrow, no head, from=2-2, to=3-2] 	
\backslash
arrow[Rightarrow, no head, from=1-2, to=2-2] 	
\backslash
arrow[Rightarrow, no head, from=1-1, to=3-1] 	
\backslash
arrow[from=1-1, to=1-2] 	
\backslash
arrow[from=1-2, to=1-4] 	
\backslash
arrow[from=2-2, to=2-4] 
\backslash
end{tikzcd}
\backslash
]
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% %YADE DIAGRAM FILE: pbkBsimp2.json
\end_layout

\begin_layout Plain Layout


\backslash
[
\backslash
begin{tikzcd} 	{A
\backslash
times_{M1} MB} & MB & {M(A+B)} & {0+B} & {(A+B)} & B & B 
\backslash

\backslash
 	& MM1 & {MM(A+1)} & M1 & {M(A+1)} & M1 & M1 
\backslash

\backslash
 	A & M1 & {M(A+1)} & 0 & A & M1 & {M(A+1)} 
\backslash

\backslash
 	A && M1 & M1 & {M(A+1)} 	
\backslash
arrow[from=3-3, to=4-3] 	
\backslash
arrow["u"', from=3-1, to=3-2] 	
\backslash
arrow[from=3-1, to=4-1] 	
\backslash
arrow["u"', from=4-1, to=4-3] 	
\backslash
arrow[from=1-3, to=2-3] 	
\backslash
arrow["
\backslash
mu", from=2-3, to=3-3] 	
\backslash
arrow["
\backslash
mu"', from=2-2, to=3-2] 	
\backslash
arrow[from=1-2, to=2-2] 	
\backslash
arrow[from=1-1, to=3-1] 	
\backslash
arrow[from=1-1, to=1-2] 	
\backslash
arrow[from=1-2, to=1-3] 	
\backslash
arrow["{MMin_2}", from=2-2, to=2-3] 	
\backslash
arrow["{Min_2}"', from=3-2, to=3-3] 	
\backslash
arrow[from=1-5, to=2-5] 	
\backslash
arrow[from=1-4, to=2-4] 	
\backslash
arrow[from=1-4, to=1-5] 	
\backslash
arrow["{Min_2}", from=2-4, to=2-5] 	
\backslash
arrow[curve={height=-12pt}, dashed, from=1-2, to=1-4] 	
\backslash
arrow[from=3-5, to=4-5] 	
\backslash
arrow[from=3-4, to=4-4] 	
\backslash
arrow[from=3-4, to=3-5] 	
\backslash
arrow["{Min_2}", from=4-4, to=4-5] 	
\backslash
arrow[curve={height=24pt}, dashed, from=1-4, to=3-4] 	
\backslash
arrow[from=1-6, to=1-7] 	
\backslash
arrow["{Min_2}"', from=3-6, to=3-7] 	
\backslash
arrow[curve={height=-12pt}, dashed, from=1-4, to=1-6] 	
\backslash
arrow[from=1-7, to=2-7] 	
\backslash
arrow["{Min_2}", from=2-7, to=3-7] 	
\backslash
arrow[from=1-6, to=2-6] 	
\backslash
arrow[Rightarrow, no head, from=2-6, to=3-6] 	
\backslash
arrow[Rightarrow, no head, from=2-6, to=2-7] 
\backslash
end{tikzcd}
\backslash
]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:occurcheck-final"

\end_inset

Given 
\begin_inset Formula $\sigma:\Gamma\rightarrow T1$
\end_inset

, 
\begin_inset Formula $u:Kd\rightarrow T1$
\end_inset

, 
\begin_inset Formula $f:Kc\rightarrow Kd$
\end_inset

, if the following square commutes, then the top morphism factors through
 either 
\begin_inset Formula $T\Gamma\rightarrow T(Kd+\Gamma)$
\end_inset

 or 
\begin_inset Formula $Kd\rightarrow TKd$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
du coup on pourrait decrire un algo qui prend un tel carre et qui renvoie
 un morphisme 
\begin_inset Formula $Kc\rightarrow T\Gamma+Kd$
\end_inset

 qui factorise ce truc?
\end_layout

\end_inset

 
\begin_inset Formula 
\[
\xymatrix{Kc\ar[d]_{f}\ar[r] & T(Kd+\Gamma)\ar[d]^{[u,\sigma]^{*}}\\
Kd\ar[r]_{u} & T1
}
\]

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Note Note
status open

\begin_layout Plain Layout
Let 
\begin_inset Formula $J':\C\rightarrow\hat{D}$
\end_inset

 mapping 
\begin_inset Formula $c$
\end_inset

 to 
\begin_inset Formula $\hom_{\C}(K-,c)$
\end_inset

, so that 
\begin_inset Formula $J=J'-\circ\delta$
\end_inset

.
 Then, we can define 
\begin_inset Formula $G'$
\end_inset

 acting on 
\begin_inset Formula $\hat{D'}$
\end_inset

 as with the same formula, generating a monad 
\begin_inset Formula $M'$
\end_inset

 such that 
\begin_inset Formula $M'(-)\circ\delta=M(-\circ\delta)$
\end_inset

.
 
\end_layout

\end_inset

Applying 
\begin_inset Formula $J$
\end_inset

 to the above diagram, we get
\begin_inset Formula 
\[
\xymatrix{yc\ar[d]_{f}\ar[r] & M(yd+J\Gamma)\ar[d]^{[u,\sigma]^{*}}\\
yd\ar[r]_{u} & M1
}
\]

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Then we postprecompose by 
\begin_inset Formula $\delta$
\end_inset

.
\begin_inset Formula 
\[
\xymatrix{yc\circ\delta\ar[d]_{f}\ar[r] & M(yd\circ\delta+J\Gamma)\ar[d]^{[u,\sigma]^{*}}\\
yd\circ\delta\ar[r]_{u} & M1
}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Proof
Now, 
\begin_inset Formula $u$
\end_inset

 is flat (Example
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "exa:flat-nattrans-yoneda"
plural "false"
caps "false"
noprefix "false"

\end_inset

), so we by the previous corollary, the top morphism factors through the
 pullback
\end_layout

\begin_layout Proof
\begin_inset Formula $yd\times_{M1}M(J\Gamma)+yd\times_{M1}yd\rightarrow M(yd+\Gamma)$
\end_inset

.
 The conclusion easily follows.
\end_layout

\begin_layout Question
Can we do the whole algorithm by translating it in the presheaf world?
\end_layout

\begin_layout Section
Termination
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:Termination"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Ask for a strict monoidal functor 
\begin_inset Formula $D^{+}\rightarrow\mathbb{N}^{\otimes}$
\end_inset

?
\end_layout

\begin_layout Plain Layout
Maybe we don't need because tiny objects are connected objects and they
 are special in an extensive cat, cf prop 4.1 nlab on extensive cat.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this section, we adapt the usual termination argument.
 Indeed, because objects of 
\begin_inset Formula $D$
\end_inset

 are connected (Property
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "assu:connected"
plural "false"
caps "false"
noprefix "false"

\end_inset

), we can define without ambiguity the 
\emph on
size
\emph default
 
\begin_inset Formula $|\Gamma|$
\end_inset

 of a 
\emph on
context
\emph default
 
\begin_inset Formula $\Gamma$
\end_inset

 (i.e., an element of 
\begin_inset Formula $D^{+}$
\end_inset

) as the length of the coproduct:
\end_layout

\begin_layout Lemma
Let 
\begin_inset Formula $\coprod_{i\in I}A_{i}$
\end_inset

 and 
\begin_inset Formula $\coprod_{j\in J}B_{j}$
\end_inset

 be isomorphic finite coproducts of connected objects.
 Then, 
\begin_inset Formula $I$
\end_inset

 and 
\begin_inset Formula $J$
\end_inset

 are isomorphic sets.
\end_layout

\begin_layout Proof
Assume an isomorphism 
\begin_inset Formula $\coprod_{i\in I}A_{i}\cong\coprod_{j\in J}B_{j}$
\end_inset

.
 By connectedness, each 
\begin_inset Formula $A_{k}\rightarrow\coprod_{j\in J}B_{j}$
\end_inset

 factors (uniquely) through a coproduct injection 
\begin_inset Formula $B_{\alpha(k)}\rightarrow\coprod_{j\in J}B_{j}$
\end_inset

.
 This induces a map 
\begin_inset Formula $\alpha:I\rightarrow J$
\end_inset

.
 Conversely, we get a map 
\begin_inset Formula $\beta:J\rightarrow I$
\end_inset

.
 Now, the composition 
\begin_inset Formula $A_{k}\rightarrow\coprod_{j\in J}B_{j}\cong\coprod_{i\in I}A_{i}$
\end_inset

 which equals 
\begin_inset Formula $A_{k}\rightarrow B_{\alpha(k)}\rightarrow A_{\beta(\alpha(k))}\rightarrow\coprod_{i\in I}A_{i}$
\end_inset

 must be the coproduct injection 
\begin_inset Formula $A_{k}\rightarrow\coprod_{i\in I}A_{i}$
\end_inset

.
 By connectedness, it follows that 
\begin_inset Formula $\beta(\alpha(k))=k$
\end_inset

.
 Therefore, 
\begin_inset Formula $\beta\circ\alpha=id$
\end_inset

, and by a symmetrical argument, 
\begin_inset Formula $\alpha\circ\beta=id$
\end_inset

.
 
\end_layout

\begin_layout Proof
We also need to define the size 
\begin_inset Formula $||t||$
\end_inset

 of a 
\emph on
term
\emph default
 
\begin_inset Formula $t:Kd\rightarrow\Delta$
\end_inset

 as 
\begin_inset Formula $|t|_{0}$
\end_inset

, as defined in Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:occur-check"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
Let us recall the usual argument.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The main difficulty to show termination is that the case 
\begin_inset Formula $M(\vec{x})=o(\vec{u})$
\end_inset

 involves a recursive call with an extended context, while all the other
 rules are reducing or keeping the same context size.
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
One way to solve this issue consists in avoiding creating new metavariables.
 Instead, we could first (potentially) reduce the arities of metavariables
 appearing in 
\begin_inset Formula $o(\vec{u})$
\end_inset

 so that they don't refer to free variables outside 
\begin_inset Formula $\vec{x}$
\end_inset

 and then directly instantiate 
\begin_inset Formula $M$
\end_inset

 with the resulting term.
 This seems to be a bit tedious to describe precisely (not to mention to
 prove correctness).
\end_layout

\end_inset

First, we show termination of the pruning phase
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:pruning-phase"
plural "false"
caps "false"
noprefix "false"

\end_inset

, and then termination of the coequalising phase
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:coequalising-phase"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Pruning phase
\end_layout

\begin_layout Standard
There are two recursives rules: 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:pruning-stepwise"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:pruning-rec"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
In fact, they can be straightforwardly recast so that the input 
\begin_inset Formula $\vec{f}$
\end_inset

 is structurally decreasing in 
\begin_inset Formula $\Gamma\vdash\vec{f}:=\vec{g}\Rightarrow\vec{u};\sigma\dashv\Delta$
\end_inset

.
\end_layout

\begin_layout Question
Can we define it truly recursively?
\end_layout

\begin_layout Subsection
Coequalising phase
\end_layout

\begin_layout Standard
There are two recursives rules: 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:unify-stepwise"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:unifying-rec"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Contrary to the pruning phase, the first one is not structurally recursive
 since a substitution is applied to the argument.
\end_layout

\begin_layout Lemma
If there is a finite derivation tree of 
\begin_inset Formula $\Gamma\vdash\vec{t}=\vec{u}\Rightarrow\sigma\dashv\Delta$
\end_inset

, and 
\begin_inset Formula $\Delta\neq\bot$
\end_inset

, then
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $|\Gamma|\geq|\Delta|$
\end_inset


\end_layout

\begin_layout Itemize
if 
\begin_inset Formula $|\Gamma|=|\Delta|$
\end_inset

, then 
\begin_inset Formula $\sigma$
\end_inset

 is a renaming, in the sense that it instantiates metavariables with metavariabl
es.
\end_layout

\end_deeper
\begin_layout Standard
This relies on the following lemma about the pruning phase, easily proved
 by induction.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
If there is a finite derivation tree of 
\begin_inset Formula 
\[
\Gamma\vdash\vec{f}:=\vec{g}\Rightarrow\vec{u};\sigma\dashv\Delta
\]

\end_inset

and 
\begin_inset Formula $\Delta\neq\top$
\end_inset

, 
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Formula $\top$
\end_inset

 n'est pas connexe car 
\begin_inset Formula $\top+\top=\top$
\end_inset


\end_layout

\end_inset

, then 
\begin_inset Formula $|\Gamma|=|\Delta|$
\end_inset

 and 
\begin_inset Formula $\sigma$
\end_inset

 is a 
\emph on
renaming
\emph default
, i.e., a free morphism: it factors through 
\begin_inset Formula $\Delta\rightarrow T\Delta$
\end_inset

.
\end_layout

\begin_layout Standard
Next, the crucial point, in the stepwise rule 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:unify-stepwise"
plural "false"
caps "false"
noprefix "false"

\end_inset

, is the following lemma.
\end_layout

\begin_layout Lemma
If 
\begin_inset Formula $\sigma$
\end_inset

 is a renaming, then 
\begin_inset Formula $||t[\sigma]||=||t||$
\end_inset

.
\end_layout

\begin_layout Standard
From these 
\end_layout

\begin_layout Section
Applications
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:applications"

\end_inset


\end_layout

\begin_layout Subsection
Nominal sets (untyped)
\end_layout

\begin_layout Subsection
Nominal sets, simply-typed
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $T$
\end_inset

 be the set of simple types.
 Here we consider the category of functors 
\begin_inset Formula $(Set_{f}^{T}\times T)_{m}\rightarrow Set$
\end_inset

, where 
\begin_inset Formula $Set_{f}^{T}$
\end_inset

 is the category of finite families indexed by 
\begin_inset Formula $T$
\end_inset

 (it is equivalent to the comma category 
\begin_inset Formula $J/T$
\end_inset

, where 
\begin_inset Formula $J:\mathbb{F}\rightarrow Set$
\end_inset

 is the canonical inclusion), and the indice 
\begin_inset Formula $-_{m}$
\end_inset

 means that we restrict to monomorphisms.
 
\end_layout

\begin_layout Standard
Note that any morphism 
\begin_inset Formula $\sigma:\Gamma\vdash\tau\rightarrow\Gamma+\Delta\vdash\tau$
\end_inset

 is the equaliser of the two obvious morphisms 
\begin_inset Formula $\Gamma+\Delta\vdash\tau\rightrightarrows\Gamma+\Delta+\Delta\vdash\tau$
\end_inset

.
\end_layout

\begin_layout Example
Consider the functor for 
\begin_inset Formula $\lambda$
\end_inset

-calculus: 
\begin_inset Formula 
\begin{align*}
F(X)_{\Gamma\vdash\sigma} & =y_{\sigma\vdash\sigma}(\Gamma\vdash\sigma) & \tag{(variables)}\\
 & +\coprod_{\tau',\sigma'}X(\Gamma,\tau'\vdash\sigma')\times y_{\vdash\tau'\Rightarrow\sigma'}(\Gamma\vdash\sigma) & \tag{(abstraction)}\\
 & +\coprod_{\tau'}X(\Gamma\vdash\tau'\Rightarrow\sigma)\times X(\Gamma\vdash\tau') & \tag{(application)}
\end{align*}

\end_inset

.
 In other words,
\begin_inset Formula 
\begin{align*}
F(X) & =\coprod_{\sigma}y_{\sigma\vdash\sigma}\\
 & +\coprod_{\tau',\sigma'}X(-,\tau'\vdash\sigma')\times y_{\vdash\tau'\Rightarrow\sigma'}\\
 & +\coprod_{\tau',\sigma}X(-\vdash\tau'\Rightarrow\sigma)\times X(-\vdash\tau')\times y_{\vdash\sigma}
\end{align*}

\end_inset


\end_layout

\begin_layout Subsection
Linear syntax
\end_layout

\begin_layout Standard

\color red
Should work with the new condition on 
\begin_inset Formula $S_{i}$
\end_inset


\end_layout

\begin_layout Standard
Take 
\begin_inset Formula $\C=Set^{\mathbb{N}}$
\end_inset

 and 
\begin_inset Formula $D$
\end_inset

 the full subcategory of representable presheaves.
 Intuitively, given 
\begin_inset Formula $X\in Set^{\mathbb{N}}$
\end_inset

, the set 
\begin_inset Formula $X_{n}$
\end_inset

 is the set of expressions with exactly 
\begin_inset Formula $n$
\end_inset

 (distinct) variables.
 Then, we can consider the linear lambda-calculus, as an endofunctor on
 
\begin_inset Formula $Set^{\mathbb{N}}$
\end_inset

 mapping 
\begin_inset Formula $X$
\end_inset

 to 
\begin_inset Formula $F(X)$
\end_inset

 where 
\begin_inset Formula $F(X)_{n}=y1+\coprod_{p+q=n}X_{p}\times X_{q}+(n+1)\times X_{n+1}$
\end_inset

.
 Note that we could also specify a non-linear binder by replacing 
\begin_inset Formula $(n+1)\times X_{n+1}$
\end_inset

 with 
\begin_inset Formula $\coprod_{p>n}\left(\begin{array}{c}
p\\
n
\end{array}\right)X_{p}$
\end_inset

.
 We could also have a non linear application by replacing 
\begin_inset Formula $\coprod_{p+q=n}X_{p}\times X_{q}$
\end_inset

 with 
\begin_inset Formula $X_{n}\times X_{n}$
\end_inset

.
\end_layout

\begin_layout Standard
Then, 
\begin_inset Formula $F^{*}(0)$
\end_inset

 is the linear lambda-calculus.
 
\begin_inset Formula $F^{*}(yn)$
\end_inset

 is the syntax of linear 
\begin_inset Formula $\lambda$
\end_inset

-calculus extended with one 
\begin_inset Formula $n$
\end_inset

-ary metavariable applied to 
\begin_inset Formula $n$
\end_inset

 (distinct) variables.
 
\end_layout

\begin_layout Standard
Note that 
\begin_inset Formula $F(X)$
\end_inset

 is of the shape 
\begin_inset Formula $I+\coprod_{i}X_{p_{i,1}}\times\dots\times X_{p_{i,m_{i}}}\times yn_{i}$
\end_inset

 and each 
\begin_inset Formula $X\mapsto X_{p_{i,1}}\times\dots\times X_{p_{i,m_{i}}}\times yn_{i}$
\end_inset

 is left adjoint to 
\begin_inset Formula $X\mapsto X_{n_{i}}\times(yp_{i,1}+\dots+yp_{i,m_{i}})$
\end_inset

.
 
\color red
No! But almost, i.e., if there exists a morphism 
\begin_inset Formula $A\rightarrow X_{p}\times y_{n}$
\end_inset

, then in fact 
\begin_inset Formula $A=A_{n}yn$
\end_inset

 and there exists a morphism 
\begin_inset Formula $A_{n}\times yp\rightarrow X$
\end_inset

, but the converse is false.
 
\end_layout

\begin_layout Remark
We could have done the non-linear version in this setting as well, but the
 abstract syntax is more convoluted (see the binomial coefficient) and metavaria
bles must still be linear.
\end_layout

\begin_layout Example
linear lambda calculus, quantum lambda calculus
\end_layout

\begin_layout Subsection
Polymorphic syntax
\end_layout

\begin_layout Standard
WIP.
 Let 
\begin_inset Formula $J^{+}:\mathbb{F}\rightarrow Set$
\end_inset

 denotes the functor mapping 
\begin_inset Formula $n$
\end_inset

 to the 
\begin_inset Formula $n+1^{th}$
\end_inset

 cardinal 
\begin_inset Formula $\{0,\dots,n\}$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $S$
\end_inset

 be a nominal set with 
\begin_inset Formula $Sn$
\end_inset

 the set of types taking free type variables in 
\begin_inset Formula $X$
\end_inset

.
\end_layout

\begin_layout Standard
Now, contexts are of the shape 
\begin_inset Formula $n;\sigma_{1},\dots,\sigma_{p}\vdash\tau$
\end_inset

, where 
\begin_inset Formula $\sigma_{i},\tau\in Sn$
\end_inset

.
 Categorically,
\end_layout

\begin_layout Standard
We first consider the category of functors 
\begin_inset Formula $\int^{n\in\mathbb{F}_{m}}Set_{f}^{Sn}\times Tn\rightarrow Set$
\end_inset

 (this is the oplax colimit), i.e., a morphism between 
\begin_inset Formula $n,\Gamma\vdash\tau$
\end_inset

 and 
\begin_inset Formula $n',\Gamma'\vdash\tau'$
\end_inset

 is a monomorphism 
\begin_inset Formula $\sigma:n\rightarrow n'$
\end_inset

 and renamings 
\begin_inset Formula $\Gamma[\sigma]\rightarrow\Gamma'$
\end_inset

 such that 
\begin_inset Formula $\tau[\sigma]=\tau'$
\end_inset

.
 
\end_layout

\begin_layout Standard
Note that a morphism 
\begin_inset Formula $\sigma:n|\Gamma\vdash\tau\rightarrow n+k|\Gamma[\sigma]+\Delta\vdash\tau[\sigma]$
\end_inset

 is the equaliser of the two obvious morphisms 
\begin_inset Formula $n+k|\Gamma[\sigma]+\Delta\vdash\tau[\sigma]\rightrightarrows n+k+k|\Gamma[\sigma]+\Delta+\Delta\vdash\tau[\sigma]$
\end_inset

.
\end_layout

\begin_layout Example
Following 
\begin_inset CommandInset citation
LatexCommand cite
key "HamanaPoly"
literal "false"

\end_inset

, we specify System 
\begin_inset Formula $F$
\end_inset

 with the functor 
\begin_inset Formula 
\begin{align*}
F(X)_{n;\Gamma\vdash\sigma} & =V_{n;\Gamma\vdash\sigma} & \tag{variables}\\
 & +\coprod_{\tau}X(n+1;\Gamma\vdash\tau)\delta_{\sigma,\forall\tau} & \tag{type abstraction}\\
 & +\coprod_{\tau'}X(n;\Gamma\vdash\forall\tau')\times(\sigma':Sn)\delta_{\sigma,\tau'[\sigma']} & \tag{type application}\\
 & +\coprod_{\tau}X(n;\Gamma,\tau\vdash\sigma')\delta_{\sigma,\tau\Rightarrow\sigma'} & \text{\tag{abstraction}}\\
 & +\coprod_{\tau'}X(n;\Gamma\vdash\tau'\Rightarrow\sigma)\times X(n;\Gamma\vdash\tau') & \tag{application}
\end{align*}

\end_inset


\end_layout

\begin_layout Example
Here, 
\begin_inset Formula $V$
\end_inset

 is defined as 
\begin_inset Formula $V(n;\Gamma\vdash\sigma)=\#\{\sigma\in\Gamma\}$
\end_inset

.
\end_layout

\begin_layout Section
Conclusion and future work
\end_layout

\begin_layout Standard
It would be nice to allow metavariables with mixed linearity constraints.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
We need to consider something like 
\begin_inset Formula $Set^{J^{+}/SJ}$
\end_inset

, but restricted to a full subcategory embedding so that the yoneda embedding
 preserve finite connected limits.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Mais en raisonnant sur 
\begin_inset Formula $Set^{\mathbb{F}}$
\end_inset

, je ne epu pas considerer la monade T' (cf main)...
 Je pourrais travailler sur 
\begin_inset Formula $Set^{\mathbb{F}_{m}}$
\end_inset

 ou mieux, sur les ensembles nominaux tiens, comme ca tout le monde preserve
 les pushouts.
 Mais est-ce que c'est skew monoidal, bof c'est pas si grave?
\end_layout

\begin_layout Plain Layout
Mais est -ce que ca fait bien la moande des termes.
 Bof on peut la definir a la main.
 Mais comment on sait que c'est une monade? Ca se voit a la main.
 Ah mais non c'est une moande libre comme le fait remarquer le gars la Ah
 mais attend, les coproduits d'ensembles nominaux c'est complique non? Bah
 non en fait.
 J'ai quand meme besoin que 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "biblio,bib"
options "plain"

\end_inset


\end_layout

\begin_layout Section
\start_of_appendix
Some lemmas
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:initial-not-connected"

\end_inset

An initial object is not connected.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $0$
\end_inset

 be an initial object.
 Then the coproduct 
\begin_inset Formula $0+0$
\end_inset

 exists (it is just 
\begin_inset Formula $0$
\end_inset

), but 
\begin_inset Formula $\hom(0,0+0)$
\end_inset

 is a singleton set (by initiality), while 
\begin_inset Formula $\hom(0,0)+\hom(0,0)$
\end_inset

 is a two element set: they can't be isomorphic.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:connected-no-commuting"

\end_inset

If 
\begin_inset Formula $X$
\end_inset

 is connected in an extensive category, there is no commutating diagram
\begin_inset Formula 
\[
\xymatrix{X\ar[r]\ar[d] & A\ar[d]\\
B\ar[r] & A+B
}
\]

\end_inset


\end_layout

\begin_layout Proof
Since sums are disjoint in an extensive category (
\begin_inset CommandInset citation
LatexCommand cite
after "Proposition 2.6"
key "ExtensiveCats"
literal "false"

\end_inset

), the above commutation induces a morphism 
\begin_inset Formula $X\rightarrow0$
\end_inset

.
 By
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after "Proposition 2.8"
key "ExtensiveCats"
literal "false"

\end_inset

, 
\begin_inset Formula $X$
\end_inset

 is then initial.
 But that is not possible, by Lemma
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lem:initial-not-connected"
plural "false"
caps "false"
noprefix "false"

\end_inset

, 
\end_layout

\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:coeq-stepwise"

\end_inset

Let 
\begin_inset Formula $f_{1},g_{1}:A_{1}\rightarrow B$
\end_inset

 and 
\begin_inset Formula $f_{2},g_{2}:A_{2}\rightarrow B$
\end_inset

 be morphisms in some category.
 Then the coequaliser of the induced parallel morphism 
\begin_inset Formula $A_{1}\coprod A_{2}\rightrightarrows B$
\end_inset

 is the morphism 
\begin_inset Formula $B\rightarrow C\rightarrow D$
\end_inset

 defined as follows (assuming the involved coequalisers exist):
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $B\rightarrow C$
\end_inset

 is the coequaliser of 
\begin_inset Formula $A_{1}\rightrightarrows B$
\end_inset

;
\end_layout

\begin_layout Enumerate
\begin_inset Formula $C\rightarrow D$
\end_inset

 is the coequaliser of 
\begin_inset Formula $A_{2}\rightrightarrows B\rightarrow C$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:pbk-free-mon-ext"

\end_inset

Let 
\begin_inset Formula $M$
\end_inset

 be an algebraically free monad on an extensive category.
 Then, for any Kleisli morphism 
\begin_inset Formula $B\rightarrow M(B')$
\end_inset

, for any object 
\begin_inset Formula $A$
\end_inset

, the following square is a pullback (TODO: refine the assumptions)
\end_layout

\begin_layout Lemma
\begin_inset Formula 
\[
\xymatrix{A\ar[r]\ar[d] & M(A+B)\ar[d]\\
A\ar[r] & M(A+B')
}
\]

\end_inset


\end_layout

\begin_layout Proof
By Lambek's lemma, 
\begin_inset Formula $M(X)\cong X+GMX$
\end_inset

 where 
\begin_inset Formula $M=G^{*}$
\end_inset

.
 Through this isomorphism, this square becomes
\begin_inset Formula 
\[
\xymatrix{A\ar[r]\ar[d] & A+B+GM(A+B)\ar[d]\\
A\ar[r] & A+B'+GM(A+B')
}
\]

\end_inset

where horizontal morphisms are left coproduct injections.
 TODO: conclude by extensivity.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:pbk-free-mon-ext-2"

\end_inset

Let 
\begin_inset Formula $M$
\end_inset

 be an algebraically free cartesian monad on an extensive category.
 Then, for any Kleisli morphism 
\begin_inset Formula $B\rightarrow MB'$
\end_inset

, the following square is a pullback (TODO: refine the assumptions)
\end_layout

\begin_layout Lemma
\begin_inset Formula 
\[
\xymatrix{MB\ar[r]\ar[d] & M(A+B)\ar[d]\\
MB'\ar[r] & M(A+B')
}
\]

\end_inset


\end_layout

\begin_layout Proof
This commuting square expands as
\begin_inset Formula 
\[
\xymatrix{MB\ar[r]^{Min_{2}}\ar[d] & M(A+B)\ar[d]\\
MMB'\ar[d]_{=}\ar[r] & M(A+M(A+B'))\ar[d]\\
MMB'\ar[r]^{MMin_{2}}\ar[d]_{\mu} & MM(A+B')\ar[d]^{\mu}\\
MB'\ar[r]_{Min_{2}} & M(A+B')
}
\]

\end_inset

where each square is a pullback square.
 
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:product-topos"

\end_inset

Grothendieck topoi are stable under products.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
citer thm 5.2.2 de Accessible
\end_layout

\end_inset


\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $(A_{i})_{i\in I}$
\end_inset

 be a family of Grothendieck topoi.
 Then, there exists a family of small categories 
\begin_inset Formula $(B_{i})_{i\in I}$
\end_inset

 such that each 
\begin_inset Formula $A_{i}$
\end_inset

 is reflective subcategory of 
\begin_inset Formula $\hat{B_{i}}$
\end_inset

 and moreover, the reflector is left exact.
 Then, 
\begin_inset Formula $\prod_{i}A_{i}\rightarrow\prod_{i}\hat{B_{i}}\cong\widehat{\coprod_{i}B_{i}}$
\end_inset

 is also coreflective and the reflector is left exact, concluding the proof.
\end_layout

\begin_layout Section
Proof of Proposition
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "prop:pbk-lemma-occur-check"
plural "false"
caps "false"
noprefix "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:proof-prop-pbk-lemma-occur-check"

\end_inset


\end_layout

\begin_layout Standard
The results of this section are formalised in agda (see occurcheck-ind.agda).
 The crucial point that keeps the agda formalisation simple is that we can
 work on 
\begin_inset Formula $[D_{0},Set]$
\end_inset

 rather than in 
\begin_inset Formula $[D,Set]$
\end_inset

, where 
\begin_inset Formula $D_{0}$
\end_inset

 is the discrete category consisting of objects of 
\begin_inset Formula $D$
\end_inset

.
\end_layout

\begin_layout Standard
Now, the basic idea is that we can define by recursion a morphism 
\begin_inset Formula $MX\rightarrow M0+\mathbb{N}$
\end_inset

 such that the following is a pullback
\begin_inset Formula 
\[
\xymatrix{M0\ar[d]\ar[r] & MX\ar[d]\\
M0\ar[r] & M0+\mathbb{N}
}
\]

\end_inset

This morphism either returns the closed term is the given input 
\begin_inset Formula $t\in MX$
\end_inset

 is a closed term, or it returns the depth of some leaf.
 Assuming it indeed returns 
\begin_inset Formula $n$
\end_inset

, then the height of 
\begin_inset Formula $t[u]$
\end_inset

 must be bigger than the height of 
\begin_inset Formula $u$
\end_inset

 raised by 
\begin_inset Formula $n$
\end_inset

.
 
\end_layout

\begin_layout Standard
Now, the basic idea for the proof is that if 
\begin_inset Formula $t[u]=u$
\end_inset

 then it must be that 
\begin_inset Formula $n=0$
\end_inset

, so 
\begin_inset Formula $t$
\end_inset

 is a metavariable (otherwise, it is a closed term).
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Let 
\begin_inset Formula $G$
\end_inset

 be an endofunctor on a category 
\begin_inset Formula $[D,Set]$
\end_inset

 (with 
\begin_inset Formula $D$
\end_inset

 small) of the shape 
\begin_inset Formula $F\mapsto\coprod_{i}S_{i}\times\prod_{j\in J_{i}}F\circ L_{i,j}$
\end_inset

 where 
\begin_inset Formula $S_{i}:D\rightarrow Set$
\end_inset

, 
\begin_inset Formula $L_{i,j}:D\rightarrow D$
\end_inset

 and 
\begin_inset Formula $J_{i}$
\end_inset

 is finite.
 Let 
\begin_inset Formula $M$
\end_inset

 denote the free monad generated by 
\begin_inset Formula $G$
\end_inset

.
 Note that these functors can be defined on 
\begin_inset Formula $[D_{0},Set]$
\end_inset

, where 
\begin_inset Formula $D_{0}$
\end_inset

 is the discrete subcategory of 
\begin_inset Formula $D$
\end_inset

 with 
\begin_inset Formula $\delta:D_{0}\rightarrow D$
\end_inset

 its embedding, which makes the Agda formalisation easy.
 More precisely, there is 
\begin_inset Formula $G_{0}$
\end_inset

 acting on 
\begin_inset Formula $[D_{0},Set]$
\end_inset

 with the same formula as 
\begin_inset Formula $G$
\end_inset

 making the following diagram commute.
\begin_inset Formula 
\[
\xymatrix{[D,Set]\ar[r]^{G}\ar[d]_{-\circ\delta} & [D,Set]\ar[d]^{-\circ\delta}\\{}
[D_{0},Set]\ar[r]_{G_{0}} & [D_{0},Set]
}
\]

\end_inset


\end_layout

\begin_layout Plain Layout
As a consequence, the free monad 
\begin_inset Formula $M$
\end_inset

 generated by 
\begin_inset Formula $G_{0}$
\end_inset

 makes the following diagram commutes
\begin_inset Formula 
\[
\xymatrix{[D,Set]\ar[r]^{M}\ar[d]_{-\circ\delta} & [D,Set]\ar[d]^{-\circ\delta}\\{}
[D_{0},Set]\ar[r]_{M} & [D_{0},Set]
}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
